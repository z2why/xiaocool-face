{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"File\",\n\n  data() {\n    return {\n      menuVisible: false,\n      name: '',\n      qeq: [],\n      multipleSelection: [],\n      pageNum: 1,\n      pageSize: 5,\n      total: 0,\n      delBtlStatu: true,\n      nextMarker: '',\n      treeData: [],\n      // 树形结构数据\n      tableData: [],\n      // 表格数据\n      currentPath: [],\n      // 当前路径\n      breadcrumb: [],\n      // 面包屑数据\n      treeProps: {\n        label: 'name',\n        children: 'children',\n        type: 'type',\n        isOpen: 'isOpen',\n        id: 'id'\n      },\n      folder: '',\n      path: '',\n      uploadfolder: '',\n      clickNode: ''\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    load() {\n      this.request.get(\"/service/cos/list\", {\n        params: {\n          folder: '',\n          nextMarker: this.nextMarker\n        }\n      }).then(res => {\n        if (res.code === \"200\") {\n          if (res.data.nextMarker) {\n            this.nextMarker = res.data.nextMarker;\n          }\n\n          this.treeData = [res.data.list];\n          this.treeData = this.treeData[0].children;\n          this.updateTableData(this.treeData[0]);\n          this.treeData[0].isOpen = true;\n          this.updateBreadcrumb(this.treeData[0].path);\n        } else {\n          this.$message.error(\"查找失败\");\n        }\n      });\n    },\n\n    UploadSectionFile(param) {\n      if (this.uploadfolder.path) {\n        const formData = new FormData();\n        formData.append(\"files\", param.file);\n        formData.append(\"folder\", this.uploadfolder.path);\n        this.request.post(\"/service/cos/upload\", formData).then(res => {\n          if (res.code === \"200\") {\n            this.$message.success(\"上传成功！\");\n            this.load();\n            this.onTreeNodeClick(this.uploadfolder);\n          } else {\n            this.$message.error(\"上传失败！\");\n          }\n        });\n      } else {\n        this.$message.error(\"请选择文件要上传到哪个文件夹！\");\n      }\n    },\n\n    del(row) {\n      if (row.isFile) {\n        this.request.get(\"/service/cos/delete\", {\n          params: {\n            folder: row.path\n          }\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"删除成功\");\n            this.load();\n\n            if (this.uploadfolder.path) {\n              this.onTreeNodeClick(this.uploadfolder);\n            }\n          } else {\n            this.$message.error(\"删除失败\");\n          }\n        });\n      } else {\n        this.request.get(\"/service/cos/deleteFolder\", {\n          params: {\n            folder: row.path\n          }\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"删除成功\");\n            this.load();\n\n            if (this.uploadfolder.path) {\n              this.onTreeNodeClick(this.uploadfolder);\n            }\n          } else {\n            this.$message.error(\"删除失败\");\n          }\n        });\n      }\n    },\n\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n      this.delBtlStatu = val.length == 0;\n    },\n\n    reset() {\n      this.folder = \"\";\n      this.load();\n    },\n\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.load();\n    },\n\n    handleFileUploadSuccess(res) {\n      console.log(res);\n      this.load();\n    },\n\n    download(row) {\n      console.log(row.path);\n      this.request.get(\"/service/cos/file/download\", {\n        params: {\n          fileName: row.path\n        }\n      }).then(res => {\n        if (res.code === \"200\") {\n          window.open(res.data.url);\n        } else {\n          this.$message.error(\"下载失败\");\n        }\n      });\n    },\n\n    delBatch() {},\n\n    onTreeNodeClick(node) {\n      if (!node.isFile) {\n        this.uploadfolder = node;\n        this.updateTableData(node);\n        this.updateBreadcrumb(node.path);\n      } else {\n        this.tableData = [node];\n        this.updateBreadcrumb(node.path);\n      }\n    },\n\n    onRowDblClick(row) {\n      this.$refs.tree.setCurrentKey(row.id);\n      this.$refs.tree.store.nodesMap[row.id].expanded = true;\n\n      if (!row.isFile) {\n        const path = [...this.currentPath, row.name];\n        this.navigateToPath(path);\n      } else {\n        console.log(row);\n        this.tableData = [row];\n        this.updateBreadcrumb(row.path);\n      }\n    },\n\n    onBreadcrumbClick(index) {\n      const path = this.currentPath.slice(0, index + 1);\n      this.navigateToPath(path);\n    },\n\n    navigateToPath(path) {\n      const node = this.findNodeByPath(this.treeData[0], path.join('/'));\n\n      if (node) {\n        this.onTreeNodeClick(node);\n        this.$refs.tree.setCurrentKey(node.id);\n      } else {\n        this.$message.error(\"路径未找到\");\n      }\n    },\n\n    //递归查找特定路径的节点\n    findNodeByPath(node, path) {\n      if (node.path === path) {\n        return node;\n      }\n\n      if (node.children) {\n        for (let child of node.children) {\n          const foundNode = this.findNodeByPath(child, path);\n\n          if (foundNode) {\n            return foundNode;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    updateTableData(node) {\n      this.tableData = node.children || [];\n      this.currentPath = node.path.split('/');\n    },\n\n    updateBreadcrumb(path) {\n      this.breadcrumb = path.split('/');\n    },\n\n    NodeImg(data) {\n      if (!data.isFile) {\n        if (data.isOpen) {\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E5%A4%B9.svg\";\n        } else {\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/3-%E6%96%87%E4%BB%B6%E5%A4%B9.svg\";\n        }\n      } else {\n        return this.dynamicImageUrl(data.type, data.isFile);\n      }\n    },\n\n    NodeExpandOpen(data, node, expanded) {\n      // 如果节点被展开，更新 type 为打开的文件夹\n      data.isOpen = true;\n    },\n\n    NodeExpandClose(data, node, expanded) {\n      // 如果节点被关闭，更新 type 为关闭的文件夹\n      data.isOpen = false;\n    },\n\n    dynamicImageUrl(type, isFile) {\n      if (!isFile) {\n        return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E7%BC%A9%E7%95%A5%E5%9B%BE-%E6%96%87%E4%BB%B6%E5%A4%B9.svg\";\n      }\n\n      switch (type) {\n        case \"photo\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6.svg\";\n\n        case \"xls\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%B7%A5%E4%BD%9C%E8%A1%A8.svg\";\n\n        case \"txt\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E8%AE%B0%E4%BA%8B%E6%9C%AC.svg\";\n\n        case \"pdf\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-PDF%E6%96%87%E6%A1%A3.svg\";\n\n        case \"word\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-Word%E6%96%87%E6%A1%A3.svg\";\n\n        case \"ppt\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%B9%BB%E7%81%AF%E7%89%87.svg\";\n\n        case \"mp3\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%A3%B0%E9%9F%B3%E6%96%87%E4%BB%B6.svg\";\n\n        case \"mp4\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6.svg\";\n\n        case \"zip\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E7%BC%A9%E7%95%A5%E5%9B%BE-%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6.svg\";\n\n        case \"exe\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E9%93%BE%E6%8E%A5.svg\";\n\n        case \"unknown\":\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E6%9C%AA%E7%9F%A5%E6%96%87%E4%BB%B6.svg\";\n      }\n    },\n\n    //根据名字寻找路径\n    findPathByName(name) {\n      const path = [];\n\n      if (this.findNodeByName(this.treeData[0], name, path)) {\n        return path;\n      }\n\n      return null;\n    },\n\n    findNodeByName(node, name, path) {\n      if (node.name === name) {\n        path.push(node.name);\n        this.$refs.tree.store.nodesMap[node.id].expanded = true;\n        return true;\n      }\n\n      if (node.children) {\n        for (let child of node.children) {\n          if (this.findNodeByName(child, name, path)) {\n            path.unshift(node.name); // 将父节点添加到路径前\n\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    navigateToName(name) {\n      const path = this.findPathByName(name);\n\n      if (path) {\n        this.navigateToPath(path);\n      } else {\n        this.$message.error(\"节点未找到\");\n      }\n    },\n\n    rightClick(MouseEvent, object, Node, element) {\n      // 鼠标右击触发事件\n      this.menuVisible = false; // 先把模态框关死，目的是 第二次或者第n次右键鼠标的时候 它默认的是true\n\n      this.menuVisible = true; // 显示模态窗口，跳出自定义菜单栏\n\n      var menu = document.querySelector('#menu');\n      menu.style.left = MouseEvent.clientX + 5 + 'px'; // MouseEvent.clientX获取鼠标点击的坐标，在该处新增加的menu填充的位置\n\n      menu.style.top = MouseEvent.clientY - 10 + 'px';\n      document.addEventListener('click', this.foo); // 给整个document添加监听鼠标事件，点击任何位置执行foo方法\n\n      console.log('右键被点击的event:', MouseEvent);\n      console.log('右键被点击的object:', object);\n      console.log('右键被点击的value:', Node);\n      console.log('右键被点击的element:', element);\n      console.log('鼠标点击了树形结构图');\n      this.clickNode = Node; //存储待操作的节点或删除、或在该层或子层添加节点\n      // alert(Node.level +\":\"+Node.label)\n    },\n\n    foo() {\n      // 取消鼠标监听事件 菜单栏\n      this.menuVisible = false;\n      document.removeEventListener('click', this.foo); // 要及时关掉监听，不关掉的是一个坑，不信你试试，虽然前台显示的时候没有啥毛病，加一个alert你就知道了\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;EACAA,YADA;;EAEAC;IACA;MACAC,kBADA;MAEAF,QAFA;MAGAG,OAHA;MAIAC,qBAJA;MAKAC,UALA;MAMAC,WANA;MAOAC,QAPA;MAQAC,iBARA;MASAC,cATA;MAUAC,YAVA;MAUA;MACAC,aAXA;MAWA;MACAC,eAZA;MAYA;MACAC,cAbA;MAaA;MACAC;QACAC,aADA;QAEAC,oBAFA;QAGAC,YAHA;QAIAC,gBAJA;QAKAC;MALA,CAdA;MAqBAC,UArBA;MAsBAC,QAtBA;MAuBAC,gBAvBA;MAwBAC;IAxBA;EA2BA,CA9BA;;EA+BAC;IACA;EACA,CAjCA;;EAkCAC;IACAC;MACA;QACAC;UACAP,UADA;UAEAX;QAFA;MADA,GAKAmB,IALA,CAKAC;QACA;UACA;YACA;UACA;;UACA;UACA;UACA;UACA;UACA;QACA,CATA,MASA;UACA;QACA;MACA,CAlBA;IAmBA,CArBA;;IAsBAC;MACA;QACA;QACAC;QACAA;QACA;UACA;YACA;YACA;YACA;UACA,CAJA,MAIA;YACA;UACA;QACA,CARA;MASA,CAbA,MAaA;QACA;MACA;IACA,CAvCA;;IAyCAC;MACA;QACA;UACAL;YACAP;UADA;QADA,GAKAQ,IALA,CAKAC;UACA;YACA;YACA;;YACA;cACA;YACA;UACA,CANA,MAMA;YACA;UACA;QACA,CAfA;MAiBA,CAlBA,MAmBA;QACA;UACAF;YACAP;UADA;QADA,GAKAQ,IALA,CAKAC;UACA;YACA;YACA;;YACA;cACA;YACA;UACA,CANA,MAMA;YACA;UACA;QACA,CAfA;MAgBA;IACA,CA/EA;;IAgFAI;MACAC;MACA;MACA;IACA,CApFA;;IAsFAC;MACA;MACA;IACA,CAzFA;;IA0FAC;MACAF;MACA;MACA;IACA,CA9FA;;IA+FAG;MACAH;MACA;MACA;IACA,CAnGA;;IAoGAI;MACAJ;MACA;IACA,CAvGA;;IAwGAK;MACAL;MACA;QACAP;UACAa;QADA;MADA,GAIAZ,IAJA,CAIAC;QACA;UACAY;QACA,CAFA,MAEA;UACA;QACA;MAEA,CAXA;IAYA,CAtHA;;IAuHAC,YAEA,CAzHA;;IA2HAC;MACA;QACA;QACA;QACA;MACA,CAJA,MAIA;QACA;QACA;MACA;IACA,CApIA;;IAqIAC;MACA;MACA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACAV;QACA;QACA;MAEA;IACA,CAjJA;;IAkJAW;MACA;MACA;IACA,CArJA;;IAuJAC;MACA;;MACA;QACA;QACA;MAEA,CAJA,MAIA;QACA;MACA;IACA,CAhKA;;IAiKA;IACAC;MACA;QACA;MACA;;MACA;QACA;UACA;;UACA;YACA;UACA;QACA;MACA;;MACA;IACA,CA/KA;;IAiLAC;MACA;MACA;IACA,CApLA;;IAqLAC;MACA;IACA,CAvLA;;IAyLAC;MACA;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CANA,MAMA;QACA;MACA;IACA,CAnMA;;IAoMAC;MACA;MACAlD;IACA,CAvMA;;IAwMAmD;MACA;MACAnD;IACA,CA3MA;;IA4MAoD;MACA;QACA;MACA;;MACA;QACA;UACA;;QACA;UACA;;QAEA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAvBA;IA0BA,CA1OA;;IA4OA;IACAC;MACA;;MACA;QACA;MACA;;MACA;IACA,CAnPA;;IAoPAC;MACA;QACAlC;QACA;QAEA;MACA;;MACA;QACA;UACA;YACAA,wBADA,CACA;;YACA;UACA;QACA;MACA;;MACA;IACA,CApQA;;IAqQAmC;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CA5QA;;IA+QAC;MAAA;MACA,yBADA,CACA;;MACA,wBAFA,CAEA;;MACA;MACAC,gDAJA,CAIA;;MACAA;MACAC,6CANA,CAMA;;MACAzB;MACAA;MACAA;MACAA;MACAA;MACA,sBAZA,CAYA;MACA;IACA,CA7RA;;IA8RA0B;MAAA;MACA;MACAD,gDAFA,CAEA;IACA;;EAjSA;AAlCA","names":["name","data","menuVisible","qeq","multipleSelection","pageNum","pageSize","total","delBtlStatu","nextMarker","treeData","tableData","currentPath","breadcrumb","treeProps","label","children","type","isOpen","id","folder","path","uploadfolder","clickNode","created","methods","load","params","then","res","UploadSectionFile","formData","del","handleSelectionChange","console","reset","handleSizeChange","handleCurrentChange","handleFileUploadSuccess","download","fileName","window","delBatch","onTreeNodeClick","onRowDblClick","onBreadcrumbClick","navigateToPath","findNodeByPath","updateTableData","updateBreadcrumb","NodeImg","NodeExpandOpen","NodeExpandClose","dynamicImageUrl","findPathByName","findNodeByName","navigateToName","rightClick","menu","document","foo"],"sourceRoot":"src/views","sources":["File.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <div style=\"padding: 10px\">\r\n    <div id=\"biaotou\">\r\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\" style=\"font-size: larger\">\r\n        <el-breadcrumb-item :to=\"{ path: '/' }\"><i class=\"el-icon-s-home\"></i>首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>文件下载</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <el-divider></el-divider>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0;display: flex;flex-direction: row;justify-content: space-between;align-items: center;\">\r\n      <div>\r\n        <el-upload\r\n            action=\"string\"\r\n            ref=\"upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleFileUploadSuccess\"\r\n            :http-request=\"UploadSectionFile\"\r\n\r\n            style=\"display: inline-block\">\r\n          <el-button type=\"primary\" class=\"ml-5\">上传文件 <i class=\"el-icon-top\"></i></el-button>\r\n        </el-upload>\r\n        <el-popconfirm\r\n            class=\"ml-5\"\r\n            confirm-button-text='确定'\r\n            cancel-button-text='我再想想'\r\n            icon=\"el-icon-info\"\r\n            icon-color=\"red\"\r\n            title=\"您确定批量删除这些数据吗？\"\r\n            @confirm=\"delBatch\"\r\n        >\r\n          <el-button type=\"danger\" slot=\"reference\" style=\"position: relative;left: 10px;\" :disabled=\"delBtlStatu\">批量删除\r\n            <i class=\"el-icon-remove-outline\"></i></el-button>\r\n        </el-popconfirm>\r\n      </div>\r\n\r\n      <div>\r\n        <el-input style=\"width: 200px;margin-right: 10px;\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\"\r\n                  v-model=\"folder\"></el-input>\r\n        <el-button class=\"ml-5\" type=\"primary\" @click=\"navigateToName(folder)\" style=\"\">搜索</el-button>\r\n        <el-button type=\"warning\" @click=\"reset\" style=\"\">重置</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <el-card>\r\n        <el-row>\r\n          <el-col :span=\"5\">\r\n            <el-tree\r\n                class=\"el-tree\"\r\n                :data=\"treeData\"\r\n                :props=\"treeProps\"\r\n                default-expanded-keys=\"[1]\"\r\n                @node-contextmenu=\"rightClick\"\r\n                node-key=\"id\"\r\n                accordion\r\n                highlight-current\r\n                @node-click=\"onTreeNodeClick\"\r\n                ref=\"tree\"\r\n                @node-expand=\"NodeExpandOpen\"\r\n                @node-collapse=\"NodeExpandClose\"\r\n            >\r\n             <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n               <img :src=\"NodeImg(data)\" class=\"el-treeSvg\"/>\r\n               <span :title=\"node.label\" v-text=\"node.label\"></span>\r\n             </span>\r\n\r\n            </el-tree>\r\n\r\n          </el-col>\r\n\r\n          <el-col :span=\"19\">\r\n            <el-breadcrumb separator-class=\"el-icon-arrow-right\"\r\n                           style=\"margin-left: 15px;height: 30px;font-size: medium\">\r\n              <el-breadcrumb-item\r\n                  v-for=\"(item, index) in breadcrumb\"\r\n                  :key=\"index\"\r\n                  @click.native=\"onBreadcrumbClick(index)\"\r\n              >\r\n                <a>{{ item }}</a>\r\n              </el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n            <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\" class=\"el-tree\"\r\n                      @selection-change=\"handleSelectionChange\"\r\n                      @row-dblclick=\"onRowDblClick\"\r\n            >\r\n              <el-table-column label=\"文件名称\">\r\n                <template #default=\"{ row }\">\r\n              <span style=\"display: flex;align-items: center;cursor: pointer\">\r\n               <img style=\"height: 20px;margin-right: 10px\" :src='dynamicImageUrl(row.type,row.isFile)'>\r\n                {{ row.name }}\r\n               </span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"size\" label=\"大小(KB)\" width=\"150\" align=\"center\"/>\r\n              <el-table-column label=\"操作\" width=\"250\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button v-if=\"scope.row.isFile\" style=\"margin-right: 10px\" type=\"primary\" slot=\"reference\"\r\n                             @click=\"download(scope.row)\">\r\n                    下载<i class=\"el-icon-download\"></i></el-button>\r\n                  <el-popconfirm\r\n                      class=\"ml-5\"\r\n                      confirm-button-text='确定'\r\n                      cancel-button-text='我再想想'\r\n                      icon=\"el-icon-info\"\r\n                      icon-color=\"red\"\r\n                      title=\"您确定删除吗？\"\r\n                      @confirm=\"del(scope.row)\"\r\n                  >\r\n                    <el-button type=\"danger\" slot=\"reference\" icon=\"el-icon-remove-outline\">\r\n                      {{ scope.row.isFile ? '删除' : '删除文件夹' }}\r\n                    </el-button>\r\n                  </el-popconfirm>\r\n                </template>\r\n              </el-table-column>\r\n\r\n            </el-table>\r\n          </el-col>\r\n        </el-row>\r\n      </el-card>\r\n    </div>\r\n    <div v-show=\"menuVisible\">\r\n      <ul id=\"menu\" class=\"menu\">\r\n        <li class=\"menu__item\" @click=\"append(clickNode)\">添加文件夹</li>\r\n        <li class=\"menu__item\" @click=\"addCard(clickNode)\">上传文件</li>\r\n        <li class=\"menu__item\" @click=\"del(clickNode)\">删 除</li>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"File\",\r\n  data() {\r\n    return {\r\n      menuVisible: false,\r\n      name: '',\r\n      qeq: [],\r\n      multipleSelection: [],\r\n      pageNum: 1,\r\n      pageSize: 5,\r\n      total: 0,\r\n      delBtlStatu: true,\r\n      nextMarker: '',\r\n      treeData: [], // 树形结构数据\r\n      tableData: [], // 表格数据\r\n      currentPath: [], // 当前路径\r\n      breadcrumb: [], // 面包屑数据\r\n      treeProps: {\r\n        label: 'name',\r\n        children: 'children',\r\n        type: 'type',\r\n        isOpen: 'isOpen',\r\n        id: 'id'\r\n      },\r\n      folder: '',\r\n      path: '',\r\n      uploadfolder: '',\r\n      clickNode:'',\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.request.get(\"/service/cos/list\", {\r\n        params: {\r\n          folder: '',\r\n          nextMarker: this.nextMarker\r\n        }\r\n      }).then(res => {\r\n        if (res.code === \"200\") {\r\n          if (res.data.nextMarker) {\r\n            this.nextMarker = res.data.nextMarker\r\n          }\r\n          this.treeData = [res.data.list];\r\n          this.treeData = this.treeData[0].children\r\n          this.updateTableData(this.treeData[0]);\r\n          this.treeData[0].isOpen = true\r\n          this.updateBreadcrumb(this.treeData[0].path)\r\n        } else {\r\n          this.$message.error(\"查找失败\")\r\n        }\r\n      })\r\n    },\r\n    UploadSectionFile(param) {\r\n      if (this.uploadfolder.path) {\r\n        const formData = new FormData();\r\n        formData.append(\"files\", param.file)\r\n        formData.append(\"folder\", this.uploadfolder.path)\r\n        this.request.post(\"/service/cos/upload\", formData).then(res => {\r\n          if (res.code === \"200\") {\r\n            this.$message.success(\"上传成功！\")\r\n            this.load();\r\n            this.onTreeNodeClick(this.uploadfolder)\r\n          } else {\r\n            this.$message.error(\"上传失败！\")\r\n          }\r\n        })\r\n      } else {\r\n        this.$message.error(\"请选择文件要上传到哪个文件夹！\")\r\n      }\r\n    },\r\n\r\n    del(row) {\r\n      if (row.isFile){\r\n      this.request.get(\"/service/cos/delete\", {\r\n        params: {\r\n          folder: row.path\r\n        }\r\n      })\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success(\"删除成功\")\r\n              this.load()\r\n              if (this.uploadfolder.path) {\r\n                this.onTreeNodeClick(this.uploadfolder)\r\n              }\r\n            } else {\r\n              this.$message.error(\"删除失败\")\r\n            }\r\n          })\r\n\r\n    }\r\n      else {\r\n        this.request.get(\"/service/cos/deleteFolder\", {\r\n          params: {\r\n            folder: row.path\r\n          }\r\n        })\r\n            .then(res => {\r\n              if (res.code === '200') {\r\n                this.$message.success(\"删除成功\")\r\n                this.load()\r\n                if (this.uploadfolder.path) {\r\n                  this.onTreeNodeClick(this.uploadfolder)\r\n                }\r\n              } else {\r\n                this.$message.error(\"删除失败\")\r\n              }\r\n            })\r\n      }\r\n    },\r\n    handleSelectionChange(val) {\r\n      console.log(val)\r\n      this.multipleSelection = val\r\n      this.delBtlStatu = val.length == 0\r\n    },\r\n\r\n    reset() {\r\n      this.folder = \"\"\r\n      this.load()\r\n    },\r\n    handleSizeChange(pageSize) {\r\n      console.log(pageSize)\r\n      this.pageSize = pageSize\r\n      this.load()\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      console.log(pageNum)\r\n      this.pageNum = pageNum\r\n      this.load()\r\n    },\r\n    handleFileUploadSuccess(res) {\r\n      console.log(res)\r\n      this.load()\r\n    },\r\n    download(row) {\r\n      console.log(row.path)\r\n      this.request.get(\"/service/cos/file/download\", {\r\n        params: {\r\n          fileName: row.path,\r\n        }\r\n      }).then(res => {\r\n        if (res.code === \"200\") {\r\n          window.open(res.data.url)\r\n        } else {\r\n          this.$message.error(\"下载失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n    delBatch() {\r\n\r\n    },\r\n\r\n    onTreeNodeClick(node) {\r\n      if (!node.isFile) {\r\n        this.uploadfolder = node;\r\n        this.updateTableData(node);\r\n        this.updateBreadcrumb(node.path);\r\n      } else {\r\n        this.tableData = [node];\r\n        this.updateBreadcrumb(node.path);\r\n      }\r\n    },\r\n    onRowDblClick(row) {\r\n      this.$refs.tree.setCurrentKey(row.id);\r\n      this.$refs.tree.store.nodesMap[row.id].expanded = true;\r\n      if (!row.isFile) {\r\n        const path = [...this.currentPath, row.name];\r\n        this.navigateToPath(path);\r\n      } else {\r\n        console.log(row)\r\n        this.tableData = [row];\r\n        this.updateBreadcrumb(row.path);\r\n\r\n      }\r\n    },\r\n    onBreadcrumbClick(index) {\r\n      const path = this.currentPath.slice(0, index + 1);\r\n      this.navigateToPath(path);\r\n    },\r\n\r\n    navigateToPath(path) {\r\n      const node = this.findNodeByPath(this.treeData[0], path.join('/'));\r\n      if (node) {\r\n        this.onTreeNodeClick(node)\r\n        this.$refs.tree.setCurrentKey(node.id);\r\n\r\n      } else {\r\n        this.$message.error(\"路径未找到\");\r\n      }\r\n    },\r\n    //递归查找特定路径的节点\r\n    findNodeByPath(node, path) {\r\n      if (node.path === path) {\r\n        return node;\r\n      }\r\n      if (node.children) {\r\n        for (let child of node.children) {\r\n          const foundNode = this.findNodeByPath(child, path);\r\n          if (foundNode) {\r\n            return foundNode;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    updateTableData(node) {\r\n      this.tableData = node.children || [];\r\n      this.currentPath = node.path.split('/');\r\n    },\r\n    updateBreadcrumb(path) {\r\n      this.breadcrumb = path.split('/');\r\n    },\r\n\r\n    NodeImg(data) {\r\n      if (!data.isFile) {\r\n        if (data.isOpen) {\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E5%A4%B9.svg\"\r\n        } else {\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/3-%E6%96%87%E4%BB%B6%E5%A4%B9.svg\"\r\n        }\r\n      } else {\r\n        return this.dynamicImageUrl(data.type, data.isFile)\r\n      }\r\n    },\r\n    NodeExpandOpen(data, node, expanded) {\r\n      // 如果节点被展开，更新 type 为打开的文件夹\r\n      data.isOpen = true\r\n    },\r\n    NodeExpandClose(data, node, expanded) {\r\n      // 如果节点被关闭，更新 type 为关闭的文件夹\r\n      data.isOpen = false\r\n    },\r\n    dynamicImageUrl(type, isFile) {\r\n      if (!isFile) {\r\n        return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E7%BC%A9%E7%95%A5%E5%9B%BE-%E6%96%87%E4%BB%B6%E5%A4%B9.svg\"\r\n      }\r\n      switch (type) {\r\n        case \"photo\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6.svg\";\r\n        case \"xls\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%B7%A5%E4%BD%9C%E8%A1%A8.svg\";\r\n\r\n        case \"txt\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E8%AE%B0%E4%BA%8B%E6%9C%AC.svg\"\r\n        case \"pdf\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-PDF%E6%96%87%E6%A1%A3.svg\"\r\n        case \"word\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-Word%E6%96%87%E6%A1%A3.svg\"\r\n        case \"ppt\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%B9%BB%E7%81%AF%E7%89%87.svg\"\r\n        case \"mp3\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E5%A3%B0%E9%9F%B3%E6%96%87%E4%BB%B6.svg\"\r\n        case \"mp4\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6.svg\"\r\n        case \"zip\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E7%BC%A9%E7%95%A5%E5%9B%BE-%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6.svg\"\r\n        case \"exe\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool%2F%E5%9B%BE%E6%A0%87%2F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E9%93%BE%E6%8E%A5.svg\"\r\n        case \"unknown\":\r\n          return \"https://xiaoku-1312782209.cos.ap-guangzhou.myqcloud.com/xiaocool/%E5%9B%BE%E6%A0%87/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B-%E6%A0%87%E5%87%86%E5%9B%BE-%E6%9C%AA%E7%9F%A5%E6%96%87%E4%BB%B6.svg\"\r\n\r\n      }\r\n    },\r\n\r\n    //根据名字寻找路径\r\n    findPathByName(name) {\r\n      const path = [];\r\n      if (this.findNodeByName(this.treeData[0], name, path)) {\r\n        return path;\r\n      }\r\n      return null;\r\n    },\r\n    findNodeByName(node, name, path) {\r\n      if (node.name === name) {\r\n        path.push(node.name);\r\n        this.$refs.tree.store.nodesMap[node.id].expanded = true;\r\n\r\n        return true;\r\n      }\r\n      if (node.children) {\r\n        for (let child of node.children) {\r\n          if (this.findNodeByName(child, name, path)) {\r\n            path.unshift(node.name); // 将父节点添加到路径前\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    navigateToName(name) {\r\n      const path = this.findPathByName(name);\r\n      if (path) {\r\n        this.navigateToPath(path);\r\n      } else {\r\n        this.$message.error(\"节点未找到\");\r\n      }\r\n    },\r\n\r\n\r\n    rightClick(MouseEvent, object, Node, element) { // 鼠标右击触发事件\r\n      this.menuVisible = false // 先把模态框关死，目的是 第二次或者第n次右键鼠标的时候 它默认的是true\r\n      this.menuVisible = true  // 显示模态窗口，跳出自定义菜单栏\r\n      var menu = document.querySelector('#menu')\r\n      menu.style.left = MouseEvent.clientX + 5 + 'px'  // MouseEvent.clientX获取鼠标点击的坐标，在该处新增加的menu填充的位置\r\n      menu.style.top = MouseEvent.clientY - 10 + 'px'\r\n      document.addEventListener('click', this.foo) // 给整个document添加监听鼠标事件，点击任何位置执行foo方法\r\n      console.log('右键被点击的event:', MouseEvent)\r\n      console.log('右键被点击的object:', object)\r\n      console.log('右键被点击的value:', Node)\r\n      console.log('右键被点击的element:', element)\r\n      console.log('鼠标点击了树形结构图')\r\n      this.clickNode = Node  //存储待操作的节点或删除、或在该层或子层添加节点\r\n      // alert(Node.level +\":\"+Node.label)\r\n    },\r\n    foo() { // 取消鼠标监听事件 菜单栏\r\n      this.menuVisible = false\r\n      document.removeEventListener('click', this.foo) // 要及时关掉监听，不关掉的是一个坑，不信你试试，虽然前台显示的时候没有啥毛病，加一个alert你就知道了\r\n    },\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n::v-deep .el-tree .el-tree-node__content {\r\n  height: 40px;\r\n  padding: 5px; /* 根据需要调整内边距 */\r\n}\r\n\r\n\r\n::v-deep .custom-tree-node {\r\n\r\n  user-select: none;\r\n  width: 100%;\r\n  overflow: hidden !important; // 溢出部分隐藏\r\n  white-space: nowrap !important; //禁止自动换行\r\n  text-overflow: ellipsis !important; // 使溢出部分以省略号显示\r\n  display: block !important;\r\n  font-size: 16px;\r\n  align-items: center;\r\n}\r\n\r\n.el-treeSvg {\r\n  height: 16px;\r\n  margin-right: 5px; // 设置右边距\r\n}\r\n\r\n\r\n::v-deep .el-tree {\r\n  height: 600px;\r\n  resize: none;\r\n  overflow-y: hidden;\r\n  /*定义滚动条宽高及背景，宽高分别对应横竖滚动条的尺寸*/\r\n  // 滚动条整体部分\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n  }\r\n\r\n  // 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。\r\n  &::-webkit-scrollbar-button {\r\n    display: none;\r\n  }\r\n\r\n  // 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(144, 147, 153, 0.3);\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  // 边角，即两个滚动条的交汇处\r\n  &::-webkit-scrollbar-corner {\r\n    display: none;\r\n  }\r\n\r\n  // 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\r\n  &::-webkit-resizer {\r\n    display: none;\r\n  }\r\n\r\n}\r\n\r\n::v-deep .el-tree:corner-present {\r\n  scrollbar-width: none;\r\n}\r\n\r\n::v-deep .el-tree:hover {\r\n  overflow-y: auto;\r\n  /*定义滚动条宽高及背景，宽高分别对应横竖滚动条的尺寸*/\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #999999 #f0f0f0;\r\n\r\n\r\n  // 滚动条整体部分\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n  }\r\n\r\n  // 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。\r\n  &::-webkit-scrollbar-button {\r\n    display: none;\r\n  }\r\n\r\n  // 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(144, 147, 153, 0.3);\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  // 边角，即两个滚动条的交汇处\r\n  &::-webkit-scrollbar-corner {\r\n    display: none;\r\n  }\r\n\r\n  // 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\r\n  &::-webkit-resizer {\r\n    display: none;\r\n  }\r\n}\r\n\r\n\r\n.menu__item {\r\n  display: block;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.menu {\r\n  height: 100px;\r\n  width: 120px;\r\n  position: absolute;\r\n  border-radius: 10px;\r\n  border: 1px solid #999999;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.menu li:hover {\r\n  background-color: #1790ff;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}