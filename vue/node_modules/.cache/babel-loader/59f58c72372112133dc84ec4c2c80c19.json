{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Footer from \"@/components/Footer\";\nexport default {\n  name: 'Login_Register',\n  components: {\n    Footer\n  },\n\n  data() {\n    return {\n      user: {},\n      user1: {},\n      fullscreenLoading: false,\n      userRegister: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 18,\n          message: '长度在 5 到 18 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 4,\n          message: '验证码错误',\n          trigger: 'blur'\n        }]\n      },\n      rulesCaptcha: {\n        userNumber: [// 手机号或者邮箱\n        {\n          validator: this.validateEmailOrPhone,\n          trigger: 'blur'\n        }],\n        captcha: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 6,\n          message: '验证码错误',\n          trigger: 'blur'\n        }]\n      },\n      rulesRegister: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 18,\n          message: '长度在 5 到 18 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: this.valipassword,\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: this.validateEmail,\n          trigger: 'blur'\n        }],\n        emailcaptcha: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 6,\n          message: '验证码错误',\n          trigger: 'blur'\n        }]\n      },\n      EOP: false,\n      sendEmail: false,\n      isLogin: false,\n      writeEmail: false,\n      userinfo: false,\n      sendType: '',\n      messageCodeVis: false,\n      emailCodeVis: false,\n      loginForm: {\n        email: '',\n        password: ''\n      },\n      registerForm: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      loginByCode: false,\n      countdown: '',\n      emailcountdown: ''\n    };\n  },\n\n  created() {\n    this.enterSearch(); // 清除状态保持\n    // 状态保持清除后刷新页面\n  },\n\n  methods: {\n    uploadImage() {\n      const captchaImg = document.getElementById(\"codeImg\");\n\n      if (captchaImg) {\n        captchaImg.src = this.$baseUrl + \"/uaa/user/getCode?\" + new Date().getTime();\n      }\n    },\n\n    LoginQQ() {\n      this.request.get(\"/user/go\");\n    },\n\n    login() {\n      //如果是根据验证码登录\n      if (this.loginByCode) {\n        //验证码类型是邮箱\n        this.$refs['form'].validate(valid => {\n          if (valid) {\n            // 表单校验合法\n            if (this.sendType === \"email\") {\n              this.request.get(\"/uaa/oauth2/verifyEmailCaptcha\", {\n                params: {\n                  email: this.user1.userNumber,\n                  code: this.user1.captcha\n                }\n              }).then(res => {\n                if (res.code === \"200\") {\n                  let userdto = {\n                    email: this.user1.userNumber,\n                    loginType: \"email\"\n                  };\n                  this.request.post(\"/uaa/oauth2/captchaLogin\", userdto).then(res => {\n                    if (res.code === \"200\") {\n                      this.loginSuccess(res.data);\n                    } else {\n                      this.$message.error(\"登录失败\");\n                    }\n                  });\n                } else {\n                  this.$message.error(\"验证码有误！\");\n                }\n              });\n            }\n          }\n        }); //验证码类型是手机号\n\n        if (this.sendType === \"phone\") {\n          this.request.get(\"/uaa/oauth2/verifySmsCaptcha\", {\n            params: {\n              phone: this.user1.userNumber,\n              code: this.user1.captcha\n            }\n          }).then(res => {\n            if (res.code === \"200\") {\n              let userdto = {\n                telephone: this.user1.userNumber,\n                loginType: \"phone\"\n              };\n              this.request.post(\"/uaa/oauth2/captchaLogin\", userdto).then(res => {\n                if (res.code === \"200\") {\n                  this.loginSuccess(res.data);\n                } else {\n                  this.$message.error(\"登录失败\");\n                }\n              });\n            } else {\n              this.$message.error(\"验证码有误！\");\n            }\n          });\n        }\n      } //用用户名密码登录\n      else {\n        this.$refs['userForm'].validate(valid => {\n          if (valid) {\n            // 表单校验合法\n            this.request.post(\"/uaa/oauth2/doLogin\", this.user).then(res => {\n              if (res.code === \"200\") {\n                this.loginSuccess(res.data);\n              } else {\n                if (res.msg === \"验证码错误\") {\n                  this.$message.error(res.msg);\n                } else {\n                  this.uploadImage();\n                  this.$message.error(res.msg);\n                }\n              }\n            });\n          }\n        });\n      }\n    },\n\n    loginGitee() {\n      window.location.href = 'https://xiaoku.store:9091/uaa/oauth2/authorize/gitee';\n    },\n\n    loginSuccess(user) {\n      localStorage.setItem(\"user\", JSON.stringify(user)); // 存储用户信息到浏览器\n\n      for (let x in user.role) {\n        console.log(user.role[x]);\n\n        if (user.role[x] === \"admin\") {\n          this.$message.success(\"登陆成功\");\n          this.$router.push(\"/Admin/user\");\n          return null;\n        }\n      }\n\n      this.$message.success(\"登陆成功\");\n      this.$router.push(\"/AddMeeting\");\n    },\n\n    // 校验是否是手机号或者邮箱\n    validateEmailOrPhone(rule, value, callback) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const phoneRegex = /^1[3-9]\\d{9}$/; // 假设中国的手机号码格式\n\n      if (!value) {\n        this.EOP = false;\n        return callback(new Error('请输入邮箱地址或者手机号码'));\n      } else if (!emailRegex.test(value) && !phoneRegex.test(value)) {\n        this.EOP = false;\n        return callback(new Error('请输入正确邮箱地址或者手机号码'));\n      } else if (emailRegex.test(value)) {\n        callback();\n        this.EOP = true;\n        this.sendType = \"email\";\n      } else if (phoneRegex.test(value)) {\n        this.EOP = true;\n        this.sendType = \"phone\";\n      }\n    },\n\n    // 校验是否邮箱\n    validateEmail(rule, value, callback) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n      if (!value) {\n        this.sendEmail = false;\n        return callback(new Error('请输入邮箱地址'));\n      } else if (!emailRegex.test(value)) {\n        this.sendEmail = false;\n        return callback(new Error('请输入正确邮箱地址'));\n      } else {\n        callback();\n        this.sendEmail = true;\n      }\n    },\n\n    //校验两次密码是否一致\n    valipassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码！'));\n      }\n\n      if (value !== this.userRegister.password) {\n        return callback(new Error('两次密码输入不一致！'));\n      } else {\n        this.userinfo = true;\n        callback();\n      }\n    },\n\n    // 发送邮件验证码或者短信验证码\n    sendCode() {\n      if (this.sendType === \"email\") {\n        this.request.get(\"/uaa/oauth2/email-captcha\", {\n          params: {\n            email: this.user1.userNumber,\n            type: \"login\"\n          }\n        }).then(res => {\n          this.$message.success(res.data);\n        });\n      }\n\n      if (this.sendType === \"phone\") {\n        this.request.get(\"/uaa/oauth2/sms-captcha\", {\n          params: {\n            phone: this.user1.userNumber,\n            type: \"login\"\n          }\n        }).then(res => {\n          this.$message.success(res.data);\n        });\n      }\n\n      this.countdown = 60;\n      this.messageCodeVis = true;\n      this.startCountdown();\n    },\n\n    /* 倒计时函数 */\n    startCountdown() {\n      const intervalId = setInterval(() => {\n        if (this.countdown > 0) {\n          this.countdown--;\n        } else {\n          clearInterval(intervalId);\n          this.messageCodeVis = false;\n        }\n      }, 1000);\n    },\n\n    // 发送邮件验证码\n    sendEmailCode() {\n      this.request.get(\"/uaa/oauth2/email-captcha\", {\n        params: {\n          email: this.userRegister.email,\n          type: \"register\"\n        }\n      }).then(res => {\n        this.$message.success(res.data);\n      });\n      this.emailcountdown = 60;\n      this.emailCodeVis = true;\n      this.startEmailCountdown();\n    },\n\n    /* 倒计时函数 */\n    startEmailCountdown() {\n      const intervalId = setInterval(() => {\n        if (this.emailcountdown > 0) {\n          this.emailcountdown--;\n        } else {\n          clearInterval(intervalId);\n          this.emailCodeVis = false;\n        }\n      }, 1000);\n    },\n\n    register() {\n      if (!this.writeEmail && this.userinfo) {\n        this.writeEmail = true;\n      } else {\n        this.$refs['userRegisterForm'].validate(valid => {\n          if (valid) {\n            // 表单校验合法\n            this.request.get(\"/uaa/oauth2/verifyEmailCaptcha\", {\n              params: {\n                email: this.userRegister.email,\n                code: this.userRegister.emailcaptcha\n              }\n            }).then(res => {\n              if (res.code === \"200\") {\n                this.request.post(\"/uaa/user/register\", this.userRegister).then(res => {\n                  if (res.code === '200') {\n                    this.$message.success(\"注册成功\");\n                    this.isLogin = !this.isLogin;\n                  } else {\n                    this.$message.error(res.msg);\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n\n    enterSearch() {\n      document.onkeydown = e => {\n        //13表⽰回车键，baseURI是当前页⾯的地址，为了更严谨，也可以加别的，可以打印e看⼀下\n        if (e.keyCode === 13 && e.target.baseURI.match()) {\n          //回车后执⾏搜索⽅法\n          if (this.isLogin) {\n            this.register();\n          } else {\n            this.login();\n          }\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA;AAEA;EACAA,sBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC,QADA;MAEAC,SAFA;MAGAC,wBAHA;MAIAC,gBAJA;MAKAC;QACAC,WACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAG,WACA;UAAAL;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CALA;QASAI,OACA;UAAAN;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MATA,CALA;MAmBAK;QACAC,aACA;QACA;UAAAC;UAAAP;QAAA,CAFA,CADA;QAKAQ,UACA;UAAAV;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MALA,CAnBA;MA8BAS;QACAZ,WACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAG,WACA;UAAAL;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CALA;QASAU,kBACA;UAAAH;UAAAP;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CATA;QAaAW,QACA;UAAAJ;UAAAP;QAAA,CADA,CAbA;QAgBAY,eACA;UAAAd;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MAhBA,CA9BA;MAmDAa,UAnDA;MAoDAC,gBApDA;MAqDAC,cArDA;MAsDAC,iBAtDA;MAuDAC,eAvDA;MAwDAC,YAxDA;MAyDAC,qBAzDA;MA0DAC,mBA1DA;MA2DAC;QACAV,SADA;QAEAR;MAFA,CA3DA;MA+DAmB;QACAlC,QADA;QAEAuB,SAFA;QAGAR;MAHA,CA/DA;MAoEAoB,kBApEA;MAqEAC,aArEA;MAsEAC;IAtEA;EAwEA,CA9EA;;EA+EAC;IACA,mBADA,CAEA;IACA;EACA,CAnFA;;EAqFAC;IACAC;MACA;;MACA;QACAC;MACA;IACA,CANA;;IAOAC;MACA;IACA,CATA;;IAUAC;MACA;MACA;QACA;QACA;UACA;YAAA;YACA;cACA,mDACA;gBACAC;kBACArB,4BADA;kBAEAP;gBAFA;cADA,CADA,EAOA6B,IAPA,CAOAC;gBACA;kBACA;oBACAvB,4BADA;oBAEAwB;kBAFA;kBAIA;oBACA;sBACA;oBACA,CAFA,MAEA;sBACA;oBACA;kBACA,CANA;gBAOA,CAZA,MAYA;kBACA;gBAEA;cACA,CAxBA;YA2BA;UACA;QACA,CAhCA,EAFA,CAoCA;;QACA;UACA,iDACA;YACAH;cACAI,4BADA;cAEAhC;YAFA;UADA,CADA,EAOA6B,IAPA,CAOAC;YACA;cACA;gBACAG,gCADA;gBAEAF;cAFA;cAIA;gBACA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;cACA,CANA;YAOA,CAZA,MAYA;cACA;YACA;UACA,CAvBA;QAyBA;MACA,CAhEA,CAiEA;MAjEA,KAkEA;QACA;UACA;YAAA;YACA;cACA;gBACA;cACA,CAFA,MAEA;gBACA;kBACA;gBACA,CAFA,MAGA;kBACA;kBACA;gBAEA;cACA;YACA,CAbA;UAcA;QACA,CAjBA;MAkBA;IAEA,CAnGA;;IAoGAG;MACAC;IACA,CAtGA;;IAwGAC;MACAC,mDADA,CACA;;MAEA;QACAC;;QACA;UACA;UACA;UACA;QACA;MACA;;MACA;MACA;IAEA,CAtHA;;IAuHA;IACAC;MACA;MACA,mCAFA,CAEA;;MAEA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA,CAHA,MAGA;QACAC;QACA;QACA;MACA,CAJA,MAIA;QACA;QACA;MACA;IACA,CA1IA;;IA2IA;IACAC;MACA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA,CAHA,MAGA;QACAD;QACA;MACA;IACA,CAxJA;;IAyJA;IACAE;MACA;QACAF;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;QACAA;MACA;IACA,CApKA;;IAqKA;IACAG;MACA;QACA,8CACA;UACAf;YACArB,4BADA;YAEAqC;UAFA;QADA,CADA,EAOAf,IAPA,CAOAC;UACA;QACA,CATA;MAWA;;MACA;QACA,4CACA;UACAF;YACAI,4BADA;YAEAY;UAFA;QADA,CADA,EAOAf,IAPA,CAOAC;UACA;QACA,CATA;MAWA;;MACA;MACA;MACA;IACA,CApMA;;IAqMA;IACAe;MACA;QACA;UACA;QACA,CAFA,MAEA;UACAC;UACA;QACA;MACA,CAPA,EAOA,IAPA;IAQA,CA/MA;;IAkNA;IACAC;MACA,8CACA;QACAnB;UACArB,8BADA;UAEAqC;QAFA;MADA,CADA,EAOAf,IAPA,CAOAC;QACA;MACA,CATA;MAWA;MACA;MACA;IACA,CAlOA;;IAmOA;IACAkB;MACA;QACA;UACA;QACA,CAFA,MAEA;UACAF;UACA;QACA;MACA,CAPA,EAOA,IAPA;IAQA,CA7OA;;IAgPAG;MACA;QACA;MACA,CAFA,MAEA;QACA;UACA;YAAA;YACA,mDACA;cACArB;gBACArB,8BADA;gBAEAP;cAFA;YADA,CADA,EAOA6B,IAPA,CAOAC;cACA;gBACA;kBACA;oBACA;oBACA;kBACA,CAHA,MAGA;oBACA;kBACA;gBACA,CAPA;cAQA;YACA,CAlBA;UAqBA;QACA,CAxBA;MAyBA;IAEA,CA/QA;;IAiRAoB;MACAC;QACA;QACA;UACA;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QACA;MACA,CAVA;IAWA;;EA7RA;AArFA","names":["name","components","Footer","data","user","user1","fullscreenLoading","userRegister","rules","username","required","message","trigger","min","max","password","code","rulesCaptcha","userNumber","validator","captcha","rulesRegister","confirmPassword","email","emailcaptcha","EOP","sendEmail","isLogin","writeEmail","userinfo","sendType","messageCodeVis","emailCodeVis","loginForm","registerForm","loginByCode","countdown","emailcountdown","created","methods","uploadImage","captchaImg","LoginQQ","login","params","then","res","loginType","phone","telephone","loginGitee","window","loginSuccess","localStorage","console","validateEmailOrPhone","callback","validateEmail","valipassword","sendCode","type","startCountdown","clearInterval","sendEmailCode","startEmailCountdown","register","enterSearch","document"],"sourceRoot":"src/views","sources":["Login_Register.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"wrapper\" style=\"height:100vh;user-select: none\">\r\n\r\n    <div class=\"main-box\">\r\n      <div :class=\"['container', 'container-login', { 'is-txl': isLogin }]\">\r\n        <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\" v-show=\"!loginByCode\" style=\"margin-bottom: 10px\">\r\n          <h2 class=\"title\">小酷人脸识别会议签到系统</h2>\r\n          <div class=\"form__icons\">\r\n            <el-tooltip content=\"使用Gitee账号登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n<!--              <a href=\"https://localhost:9091/uaa/oauth2/authorize/gitee\">-->\r\n                <img class=\"icons_svg\" src=\"../assets/svg/gitee登录.svg\" @click=\"loginGitee()\">\r\n<!--              </a>-->\r\n            </el-tooltip>\r\n            <el-tooltip content=\"使用手机/邮箱验证码登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/验证码登录.svg\" @click=\"loginByCode=!loginByCode\">\r\n            </el-tooltip>\r\n            <el-tooltip content=\"使用QQ账号登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/QQ登录.svg\" @click=\"LoginQQ()\">\r\n            </el-tooltip>\r\n            <el-tooltip content=\"使用微信账号登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/微信登录.svg\" @click=\"LoginWechat()\">\r\n            </el-tooltip>\r\n          </div>\r\n          <span class=\"text\">or use username for login</span>\r\n          <div style=\"display: flex;flex-direction: column;\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input prefix-icon=\"el-icon-user\" placeholder=\"用户名\" v-model=\"user.username\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password placeholder=\"密码\"\r\n                        v-model=\"user.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"code\" class=\"Verification\">\r\n              <div style=\"display: flex;flex-direction: row;align-items: baseline;\">\r\n                <el-input size=\"medium\" prefix-icon=\"el-icon-unlock\" placeholder=\"验证码\"\r\n                          v-model=\"user.code\"></el-input>\r\n                <el-image\r\n                    :src='$baseUrl+\"/uaa/user/getCode\"'\r\n                    id=\"codeImg\"\r\n                    style=\"width: 46%; cursor: pointer;border-radius: 7px;\"\r\n                    fit=\"cover\"\r\n                    @click=\"uploadImage()\"\r\n                    alt=\"验证码\"\r\n                    title=\"点击更换验证码\"\r\n                ></el-image>\r\n              </div>\r\n            </el-form-item>\r\n            <el-form-item style=\"align-self: center\">\r\n              <el-button class=\"primary-btn\"\r\n                         style=\"font-size: medium;line-height: 0;\r\n                   margin-top: 10px;\" autocomplete=\"off\" @click=\"login()\"\r\n                         @keyup.enter=\"enterSearch\">登 录\r\n              </el-button>\r\n            </el-form-item>\r\n          </div>\r\n        </el-form>\r\n\r\n\r\n        <!--      使用手机或者邮箱登录-->\r\n        <el-form :model=\"user1\" :rules=\"rulesCaptcha\" ref=\"form\" v-show=\"loginByCode\" style=\"margin-bottom: 20px;\">\r\n          <h2 class=\"title\">小酷人脸识别会议签到系统</h2>\r\n          <div class=\"form__icons\">\r\n            <el-tooltip content=\"使用用户名密码登录\" placement=\"bottom\" effect=\"light\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/ID登录.svg\" @click=\"loginByCode=!loginByCode\">\r\n            </el-tooltip>\r\n          </div>\r\n          <span class=\"text\">or use phone/email for login</span>\r\n          <div style=\"display: flex;flex-direction: column;align-items: center;\">\r\n            <el-form-item prop=\"userNumber\">\r\n              <el-input prefix-icon=\"el-icon-message\" placeholder=\"手机号/邮箱\" v-model=\"user1.userNumber\"\r\n                        clearable></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"captcha\">\r\n              <el-input size=\"medium\" prefix-icon=\"el-icon-unlock\" placeholder=\"验证码\"\r\n                        v-model=\"user1.captcha\">\r\n\r\n                <template #suffix>\r\n                  <div v-if=\"messageCodeVis\" style=\"font-family:'微软雅黑'; line-height: 54px;\">{{ countdown }}秒后重新获取</div>\r\n                  <el-button v-if=\"(!messageCodeVis)&&EOP\"\r\n                             type=\"text\" style=\"color: #676a6f;\r\n                         font-family:'微软雅黑';line-height: initial;\"\r\n                             @click=\"sendCode\">获取验证码\r\n                  </el-button>\r\n                </template>\r\n\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n              <el-button class=\"primary-btn\"\r\n                         style=\"font-size: medium;line-height: 0;\r\n                       margin-top: 18px;\" autocomplete=\"off\"\r\n                         @click=\"login()\" @keyup.enter=\"enterSearch\" v-loading.fullscreen.lock=\"fullscreenLoading\">登 录\r\n              </el-button>\r\n            </el-form-item>\r\n          </div>\r\n        </el-form>\r\n\r\n      </div>\r\n\r\n\r\n      <div\r\n          :class=\"['container', 'container-register', { 'is-txl is-z200': isLogin }]\">\r\n        <el-form :model=\"userRegister\" :rules=\"rulesRegister\" ref=\"userRegisterForm\">\r\n          <h2 class=\"title\">创建账号</h2>\r\n          <div class=\"form__icons\">\r\n            <el-tooltip content=\"使用Gitee注册并登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/gitee登录.svg\" @click=\"LoginGitee()\">\r\n            </el-tooltip>\r\n            <el-tooltip content=\"使用QQ注册并登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/QQ登录.svg\" @click=\"LoginQQ()\">\r\n            </el-tooltip>\r\n            <el-tooltip content=\"使用微信注册并登录\" placement=\"bottom\" effect=\"light\" :visible-arrow=\"false\">\r\n              <img class=\"icons_svg\" src=\"../assets/svg/微信登录.svg\" @click=\"LoginWechat()\">\r\n            </el-tooltip>\r\n          </div>\r\n          <span class=\"text\">or use username for register</span>\r\n          <div v-show=\"!writeEmail\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input prefix-icon=\"el-icon-user\" placeholder=\"用户名\" v-model=\"userRegister.username\"\r\n                        clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"密码\" show-password\r\n                        v-model=\"userRegister.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"confirmPassword\">\r\n              <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"确认密码\" show-password\r\n                        v-model=\"userRegister.confirmPassword\"></el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div v-show=\"writeEmail\">\r\n            <el-form-item prop=\"email\">\r\n              <el-input prefix-icon=\"el-icon-message\" placeholder=\"邮箱地址\" v-model=\"userRegister.email\"\r\n                        clearable></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"emailcaptcha\">\r\n              <el-input size=\"medium\" prefix-icon=\"el-icon-unlock\" placeholder=\"验证码\"\r\n                        v-model=\"userRegister.emailcaptcha\">\r\n                <template #suffix>\r\n                  <div v-if=\"emailCodeVis\" style=\"font-family:'微软雅黑'; line-height: 54px;\">{{ emailcountdown }}秒后重新获取\r\n                  </div>\r\n                  <el-button v-if=\"(!emailCodeVis)&&sendEmail\" type=\"text\"\r\n                             style=\"color: #676a6f;font-family:'微软雅黑';line-height: initial;\" @click=\"sendEmailCode\">\r\n                    获取验证码\r\n                  </el-button>\r\n                </template>\r\n\r\n              </el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"primary-btn\" style=\"margin-top: 15px\" @keyup.enter=\"enterSearch\" @click=\"register()\">注 册</div>\r\n        </el-form>\r\n      </div>\r\n\r\n      <div :class=\"['switch', { login: isLogin }]\">\r\n        <div class=\"switch__circle\"></div>\r\n        <div class=\"switch__circle switch__circle_top\"></div>\r\n        <div class=\"switch__container\">\r\n          <h2>{{ isLogin ? 'Hello Friend !' : 'Welcome Back !' }}</h2>\r\n          <div class=\"avatar_box\">\r\n            <img src=\"../assets/logo.jpeg\" class=\"an img\" alt=\"\" style=\"width: 100%;\r\n      height: 100%;\r\n        border-radius: 35%;\r\n          .brightness {-webkit-filter: brightness(0.30);filter: brightness(1%);}\r\n\">\r\n          </div>\r\n          <p>\r\n            {{\r\n              isLogin\r\n                  ? '为保证账号安全使用,请确认信息无误'\r\n\r\n                  : '如果您第一次使用,请先完成注册'\r\n            }}\r\n          </p>\r\n          <div class=\"primary-btn\" @click=\"isLogin = !isLogin\" style=\"font-size: medium\">\r\n            {{ isLogin ? '立即登录' : '立即注册' }}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n    <Footer style=\"top: 96%; position: absolute;\"></Footer>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Footer from \"@/components/Footer\";\r\n\r\nexport default {\r\n  name: 'Login_Register',\r\n  components: {\r\n    Footer\r\n  },\r\n  data() {\r\n    return {\r\n      user: {},\r\n      user1: {},\r\n      fullscreenLoading: false,\r\n      userRegister: {},\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 5, max: 18, message: '长度在 5 到 18 个字符', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur'}\r\n        ],\r\n        code: [\r\n          {required: true, message: '请输入验证码', trigger: 'blur'},\r\n          {min: 4, max: 4, message: '验证码错误', trigger: 'blur'}\r\n        ],\r\n      },\r\n      rulesCaptcha: {\r\n        userNumber: [\r\n          // 手机号或者邮箱\r\n          {validator: this.validateEmailOrPhone, trigger: 'blur'}\r\n        ],\r\n        captcha: [\r\n          {required: true, message: '请输入验证码', trigger: 'blur'},\r\n          {min: 6, max: 6, message: '验证码错误', trigger: 'blur'}\r\n        ],\r\n      },\r\n\r\n      rulesRegister: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 5, max: 18, message: '长度在 5 到 18 个字符', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur'}\r\n        ],\r\n        confirmPassword: [\r\n          {validator: this.valipassword, trigger: 'blur'},\r\n          {min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {validator: this.validateEmail, trigger: 'blur'}\r\n        ],\r\n        emailcaptcha: [\r\n          {required: true, message: '请输入验证码', trigger: 'blur'},\r\n          {min: 6, max: 6, message: '验证码错误', trigger: 'blur'}\r\n        ]\r\n      },\r\n      EOP: false,\r\n      sendEmail: false,\r\n      isLogin: false,\r\n      writeEmail: false,\r\n      userinfo: false,\r\n      sendType: '',\r\n      messageCodeVis: false,\r\n      emailCodeVis: false,\r\n      loginForm: {\r\n        email: '',\r\n        password: '',\r\n      },\r\n      registerForm: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n      },\r\n      loginByCode: false,\r\n      countdown: '',\r\n      emailcountdown: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.enterSearch();\r\n    // 清除状态保持\r\n    // 状态保持清除后刷新页面\r\n  },\r\n\r\n  methods: {\r\n    uploadImage() {\r\n      const captchaImg = document.getElementById(\"codeImg\");\r\n      if (captchaImg) {\r\n        captchaImg.src = this.$baseUrl + \"/uaa/user/getCode?\" + new Date().getTime();\r\n      }\r\n      },\r\n    LoginQQ() {\r\n      this.request.get(\"/user/go\")\r\n    },\r\n    login() {\r\n      //如果是根据验证码登录\r\n      if (this.loginByCode) {\r\n        //验证码类型是邮箱\r\n        this.$refs['form'].validate((valid) => {\r\n          if (valid) {  // 表单校验合法\r\n            if (this.sendType === \"email\") {\r\n              this.request.get(\"/uaa/oauth2/verifyEmailCaptcha\",\r\n                  {\r\n                    params: {\r\n                      email: this.user1.userNumber,\r\n                      code: this.user1.captcha\r\n                    },\r\n\r\n                  }).then(res => {\r\n                    if (res.code === \"200\") {\r\n                      let userdto = {\r\n                        email: this.user1.userNumber,\r\n                        loginType: \"email\"\r\n                      }\r\n                      this.request.post(\"/uaa/oauth2/captchaLogin\", userdto).then(res => {\r\n                        if (res.code === \"200\") {\r\n                          this.loginSuccess(res.data)\r\n                        } else {\r\n                          this.$message.error(\"登录失败\")\r\n                        }\r\n                      })\r\n                    } else {\r\n                      this.$message.error(\"验证码有误！\")\r\n\r\n                    }\r\n                  }\r\n              )\r\n\r\n            }\r\n          }\r\n        });\r\n\r\n        //验证码类型是手机号\r\n        if (this.sendType === \"phone\") {\r\n          this.request.get(\"/uaa/oauth2/verifySmsCaptcha\",\r\n              {\r\n                params: {\r\n                  phone: this.user1.userNumber,\r\n                  code: this.user1.captcha\r\n                },\r\n\r\n              }).then(res => {\r\n                if (res.code === \"200\") {\r\n                  let userdto = {\r\n                    telephone: this.user1.userNumber,\r\n                    loginType: \"phone\"\r\n                  }\r\n                  this.request.post(\"/uaa/oauth2/captchaLogin\", userdto).then(res => {\r\n                    if (res.code === \"200\") {\r\n                      this.loginSuccess(res.data)\r\n                    } else {\r\n                      this.$message.error(\"登录失败\")\r\n                    }\r\n                  })\r\n                } else {\r\n                  this.$message.error(\"验证码有误！\")\r\n                }\r\n              }\r\n          )\r\n        }\r\n      }\r\n      //用用户名密码登录\r\n      else {\r\n        this.$refs['userForm'].validate((valid) => {\r\n          if (valid) {  // 表单校验合法\r\n            this.request.post(\"/uaa/oauth2/doLogin\", this.user).then(res => {\r\n              if (res.code === \"200\") {\r\n                this.loginSuccess(res.data)\r\n              } else {\r\n                if (res.msg===\"验证码错误\"){\r\n                  this.$message.error(res.msg)\r\n                }\r\n                else {\r\n                  this.uploadImage()\r\n                  this.$message.error(res.msg)\r\n\r\n                }\r\n              }\r\n            })\r\n          }\r\n        });\r\n      }\r\n\r\n    },\r\n    loginGitee(){\r\n      window.location.href = 'https://xiaoku.store:9091/uaa/oauth2/authorize/gitee';\r\n    },\r\n\r\n    loginSuccess(user) {\r\n       localStorage.setItem(\"user\", JSON.stringify(user))  // 存储用户信息到浏览器\r\n\r\n      for (let x in user.role) {\r\n        console.log(user.role[x])\r\n        if (user.role[x] === \"admin\") {\r\n          this.$message.success(\"登陆成功\")\r\n          this.$router.push(\"/Admin/user\")\r\n          return null\r\n        }\r\n      }\r\n      this.$message.success(\"登陆成功\")\r\n      this.$router.push(\"/AddMeeting\")\r\n\r\n    },\r\n    // 校验是否是手机号或者邮箱\r\n    validateEmailOrPhone(rule, value, callback) {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      const phoneRegex = /^1[3-9]\\d{9}$/; // 假设中国的手机号码格式\r\n\r\n      if (!value) {\r\n        this.EOP = false;\r\n        return callback(new Error('请输入邮箱地址或者手机号码'));\r\n      } else if (!emailRegex.test(value) && !phoneRegex.test(value)) {\r\n        this.EOP = false;\r\n        return callback(new Error('请输入正确邮箱地址或者手机号码'));\r\n      } else if (emailRegex.test(value)) {\r\n        callback();\r\n        this.EOP = true;\r\n        this.sendType = \"email\";\r\n      } else if (phoneRegex.test(value)) {\r\n        this.EOP = true;\r\n        this.sendType = \"phone\";\r\n      }\r\n    },\r\n    // 校验是否邮箱\r\n    validateEmail(rule, value, callback) {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!value) {\r\n        this.sendEmail = false;\r\n        return callback(new Error('请输入邮箱地址'));\r\n      } else if (!emailRegex.test(value)) {\r\n        this.sendEmail = false;\r\n        return callback(new Error('请输入正确邮箱地址'));\r\n      } else {\r\n        callback();\r\n        this.sendEmail = true;\r\n      }\r\n    },\r\n    //校验两次密码是否一致\r\n    valipassword(rule, value, callback) {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码！'));\r\n      }\r\n      if (value !== this.userRegister.password) {\r\n        return callback(new Error('两次密码输入不一致！'));\r\n      } else {\r\n        this.userinfo = true\r\n        callback();\r\n      }\r\n    },\r\n    // 发送邮件验证码或者短信验证码\r\n    sendCode() {\r\n      if (this.sendType === \"email\") {\r\n        this.request.get(\"/uaa/oauth2/email-captcha\",\r\n            {\r\n              params: {\r\n                email: this.user1.userNumber,\r\n                type: \"login\"\r\n              },\r\n\r\n            }).then(res => {\r\n              this.$message.success(res.data)\r\n            }\r\n        )\r\n      }\r\n      if (this.sendType === \"phone\") {\r\n        this.request.get(\"/uaa/oauth2/sms-captcha\",\r\n            {\r\n              params: {\r\n                phone: this.user1.userNumber,\r\n                type: \"login\"\r\n              },\r\n\r\n            }).then(res => {\r\n              this.$message.success(res.data)\r\n            }\r\n        )\r\n      }\r\n      this.countdown = 60\r\n      this.messageCodeVis = true\r\n      this.startCountdown()\r\n    },\r\n    /* 倒计时函数 */\r\n    startCountdown() {\r\n      const intervalId = setInterval(() => {\r\n        if (this.countdown > 0) {\r\n          this.countdown--;\r\n        } else {\r\n          clearInterval(intervalId)\r\n          this.messageCodeVis = false\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n\r\n    // 发送邮件验证码\r\n    sendEmailCode() {\r\n      this.request.get(\"/uaa/oauth2/email-captcha\",\r\n          {\r\n            params: {\r\n              email: this.userRegister.email,\r\n              type: \"register\"\r\n            },\r\n\r\n          }).then(res => {\r\n            this.$message.success(res.data)\r\n          }\r\n      )\r\n      this.emailcountdown = 60\r\n      this.emailCodeVis = true\r\n      this.startEmailCountdown()\r\n    },\r\n    /* 倒计时函数 */\r\n    startEmailCountdown() {\r\n      const intervalId = setInterval(() => {\r\n        if (this.emailcountdown > 0) {\r\n          this.emailcountdown--;\r\n        } else {\r\n          clearInterval(intervalId)\r\n          this.emailCodeVis = false\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n\r\n    register() {\r\n      if (!this.writeEmail && this.userinfo) {\r\n        this.writeEmail = true;\r\n      } else {\r\n        this.$refs['userRegisterForm'].validate((valid) => {\r\n          if (valid) {  // 表单校验合法\r\n            this.request.get(\"/uaa/oauth2/verifyEmailCaptcha\",\r\n                {\r\n                  params: {\r\n                    email: this.userRegister.email,\r\n                    code: this.userRegister.emailcaptcha\r\n                  },\r\n\r\n                }).then(res => {\r\n                  if (res.code === \"200\") {\r\n                    this.request.post(\"/uaa/user/register\", this.userRegister).then(res => {\r\n                      if (res.code === '200') {\r\n                        this.$message.success(\"注册成功\")\r\n                        this.isLogin = !this.isLogin\r\n                      } else {\r\n                        this.$message.error(res.msg)\r\n                      }\r\n                    })\r\n                  }\r\n                }\r\n            )\r\n\r\n          }\r\n        });\r\n      }\r\n\r\n    },\r\n\r\n    enterSearch() {\r\n      document.onkeydown = e => {\r\n        //13表⽰回车键，baseURI是当前页⾯的地址，为了更严谨，也可以加别的，可以打印e看⼀下\r\n        if (e.keyCode === 13 && e.target.baseURI.match()) {\r\n          //回车后执⾏搜索⽅法\r\n          if (this.isLogin) {\r\n            this.register()\r\n          } else {\r\n            this.login()\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-input--prefix .el-input__inner {\r\n  width: 330px;\r\n  height: 45px;\r\n  margin: 4px 0;\r\n  font-size: 14px;\r\n  letter-spacing: 0.15px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 38px;\r\n  // font-family: 'Montserrat', sans-serif;\r\n  background-color: #ecf0f3;\r\n  transition: 0.25s ease;\r\n  border-radius: 8px;\r\n  box-shadow: inset 2px 2px 4px #d1d9e6;\r\n\r\n  &::placeholder {\r\n    color: #a0a5a8;\r\n  }\r\n}\r\n\r\n::v-deep .Verification .el-input__inner {\r\n  width: 200px;\r\n}\r\n\r\n::v-deep .el-form-item__error {\r\n  color: #E10000AD;\r\n  font-size: 14px;\r\n  position: inherit;\r\n  top: 78%;\r\n}\r\n\r\n.login-box {\r\n  border: 1px solid #dccfcf;\r\n  width: 350px;\r\n  margin: 180px auto;\r\n  padding: 35px 80px 15px 35px;\r\n  border-radius: 5px;\r\n  -webkit-border-radius: 5px;\r\n  -moz-border-radius: 5px;\r\n  box-shadow: 0 0 25px #909399;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n\r\n}\r\n\r\n::v-deep .el-form-item {\r\n  margin-bottom: 10px\r\n}\r\n\r\n//\r\n//::v-deep .el-image__inner{\r\n//  vertical-align: sub;\r\n//}\r\n\r\n.form__icons {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 10px;\r\n\r\n  .icons_svg {\r\n    width: 44px;\r\n    height: 44px;\r\n    margin: 0 10px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.avatar_box {\r\n  height: 130px;\r\n  width: 130px;\r\n  border-radius: 35%;\r\n  position: absolute;\r\n  left: 49%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: #ecf0f3;\r\n  top: 16px;\r\n}\r\n\r\n@-webkit-keyframes rotation {\r\n  from {\r\n    -webkit-transform: rotate(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.an:hover {\r\n  -webkit-transform: rotate(360deg);\r\n  animation: rotation 3s linear infinite;\r\n  -moz-animation: rotation 3s linear infinite;\r\n  -webkit-animation: rotation 3s linear infinite;\r\n  -o-animation: rotation 3s linear infinite;\r\n}\r\n\r\n.wrapper {\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-image: radial-gradient(circle, #f0f3f6, #fff, #b5c0c9);\r\n  background-size: 120% 100%;\r\n\r\n}\r\n\r\n.main-box {\r\n  z-index: 1;\r\n  position: relative;\r\n  left: 23%;\r\n  top: 12%;\r\n  width: 700px;\r\n  min-width: 850px;\r\n  min-height: 500px;\r\n  height: 520px;\r\n  padding: 25px;\r\n  background-color: #ecf0f3;\r\n  box-shadow: 10px 10px 10px #bec7d5, -10px -10px 10px #f9f9f9;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 600px;\r\n    height: 100%;\r\n    padding: 25px;\r\n    background-color: #ecf0f3;\r\n    transition: all 1.25s;\r\n\r\n    form {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      width: 100%;\r\n      height: 100%;\r\n      color: #a0a5a8;\r\n\r\n      .title {\r\n        font-size: 30px;\r\n        font-weight: 700;\r\n        line-height: 3;\r\n        color: #181818;\r\n      }\r\n\r\n      .text {\r\n        margin-top: 10px;\r\n        margin-bottom: 12px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .container-login {\r\n    z-index: 100;\r\n    left: calc(100% - 570px);\r\n  }\r\n\r\n  .container-register {\r\n    left: calc(55% - 500px);\r\n    z-index: 0;\r\n  }\r\n\r\n  .is-txl {\r\n    transition: 1.25s;\r\n    transform-origin: right;\r\n  }\r\n\r\n  .is-z200 {\r\n    z-index: 200;\r\n    transition: 1.25s;\r\n  }\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 320px;\r\n    padding: 50px;\r\n    z-index: 200;\r\n    transition: 1.25s;\r\n    background-color: #ecf0f3;\r\n    overflow: hidden;\r\n    box-shadow: 4px 4px 10px #d1d9e6, -4px -4px 10px #f9f9f9;\r\n    color: #a0a5a8;\r\n\r\n    .switch__circle {\r\n      position: absolute;\r\n      width: 440px;\r\n      height: 460px;\r\n      border-radius: 50%;\r\n      background-color: #ecf0f3;\r\n      box-shadow: inset 8px 8px 12px #d1d9e6, inset -8px -8px 12px #f9f9f9;\r\n      bottom: -60%;\r\n      left: -60%;\r\n      transition: 1.25s;\r\n      z-index: 1;\r\n    }\r\n\r\n    .switch__circle_top {\r\n      top: -30%;\r\n      left: 60%;\r\n      width: 300px;\r\n      height: 300px;\r\n    }\r\n\r\n    .switch__container {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      position: absolute;\r\n      width: 400px;\r\n      margin-top: 40px;\r\n      padding: 50px 55px;\r\n      transition: 1.25s;\r\n\r\n      h2 {\r\n        font-size: 27px;\r\n        font-weight: 700;\r\n        line-height: 3;\r\n        color: #181818;\r\n      }\r\n\r\n      p {\r\n        font-size: 14px;\r\n        letter-spacing: 0.25px;\r\n        text-align: center;\r\n        line-height: 1.6;\r\n      }\r\n    }\r\n  }\r\n\r\n  .login {\r\n    left: calc(100% - 319px);\r\n\r\n    .switch__circle {\r\n      left: 100px;\r\n    }\r\n\r\n    .switch__circle_top {\r\n      left: -150px;\r\n    }\r\n  }\r\n\r\n  .primary-btn {\r\n    width: 140px;\r\n    height: 50px;\r\n    border-radius: 25px;\r\n    margin-top: 25px;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    font-size: 14px;\r\n    letter-spacing: 2px;\r\n    background-color: #4b70e2;\r\n    color: #f9f9f9;\r\n    cursor: pointer;\r\n    box-shadow: 8px 8px 16px #d1d9e6, -8px -8px 16px #f9f9f9;\r\n\r\n    &:hover {\r\n      box-shadow: 4px 4px 6px 0 rgb(255 255 255 / 50%),\r\n      -4px -4px 6px 0 rgb(116 125 136 / 50%),\r\n      inset -4px -4px 6px 0 rgb(255 255 255 / 20%),\r\n      inset 4px 4px 6px 0 rgb(0 0 0 / 40%);\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}