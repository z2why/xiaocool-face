{"ast":null,"code":"import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\n\nexport function PropSync(propName, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (target, key) {\n    applyMetadata(options, target, key);\n    createDecorator(function (componentOptions, k) {\n      ;\n      (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n      (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n        get: function () {\n          return this[propName];\n        },\n        set: function (value) {\n          this.$emit(\"update:\" + propName, value);\n        }\n      };\n    })(target, key);\n  };\n}","map":{"version":3,"names":["createDecorator","applyMetadata","PropSync","propName","options","target","key","componentOptions","k","props","computed","get","set","value","$emit"],"sources":["C:/Users/86134/Desktop/爱读书/springboot-vue/vue/node_modules/vue-property-decorator/lib/decorators/PropSync.js"],"sourcesContent":["import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\nexport function PropSync(propName, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    this.$emit(\"update:\" + propName, value);\n                },\n            };\n        })(target, key);\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqC;EACxC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,OAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;IAC1BL,aAAa,CAACG,OAAD,EAAUC,MAAV,EAAkBC,GAAlB,CAAb;IACAN,eAAe,CAAC,UAAUO,gBAAV,EAA4BC,CAA5B,EAA+B;MAC3C;MACA,CAACD,gBAAgB,CAACE,KAAjB,KAA2BF,gBAAgB,CAACE,KAAjB,GAAyB,EAApD,CAAD,EAA0DN,QAA1D,IAAsEC,OAAtE;MACA,CAACG,gBAAgB,CAACG,QAAjB,KAA8BH,gBAAgB,CAACG,QAAjB,GAA4B,EAA1D,CAAD,EAAgEF,CAAhE,IAAqE;QACjEG,GAAG,EAAE,YAAY;UACb,OAAO,KAAKR,QAAL,CAAP;QACH,CAHgE;QAIjES,GAAG,EAAE,UAAUC,KAAV,EAAiB;UAClB,KAAKC,KAAL,CAAW,YAAYX,QAAvB,EAAiCU,KAAjC;QACH;MANgE,CAArE;IAQH,CAXc,CAAf,CAWGR,MAXH,EAWWC,GAXX;EAYH,CAdD;AAeH"},"metadata":{},"sourceType":"module"}