{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as faceapi from 'face-api.js';\nexport default {\n  mounted() {\n    this.loadModels();\n  },\n\n  methods: {\n    async loadModels() {\n      // 加载模型\n      const MODEL_URL = '/models';\n      await faceapi.loadModels(MODEL_URL);\n      this.enableCamera();\n    },\n\n    async enableCamera() {\n      const video = document.getElementById('videoElement');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {}\n      });\n      video.srcObject = stream;\n      await faceapi.warmupModels(video);\n    },\n\n    async startLivenessDetection() {\n      const video = document.getElementById('videoElement');\n      const displaySize = {\n        width: video.offsetWidth,\n        height: video.offsetHeight\n      };\n      faceapi.matchDimensions(video, displaySize);\n      setInterval(async () => {\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        const resizedDetections = detections.map(d => d.forSize(displaySize));\n        const livenessDetected = resizedDetections.every(d => d.expressions[0].probability > 0.5);\n\n        if (livenessDetected) {\n          // 活体检测通过\n          console.log('Liveness detected');\n        } else {\n          // 活体检测失败\n          console.log('Liveness not detected');\n        }\n      }, 100);\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;AAUA;AAEA;EACAA;IACA;EACA,CAHA;;EAIAC;IACA;MACA;MACA;MACA;MACA;IACA,CANA;;IAOA;MACA;MACA;QAAAC;MAAA;MACAA;MACA;IACA,CAZA;;IAaA;MACA;MACA;QAAAC;QAAAC;MAAA;MACAC;MAEAC;QACA;QACA;QACA;;QAEA;UACA;UACAC;QACA,CAHA,MAGA;UACA;UACAA;QACA;MACA,CAZA,EAYA,GAZA;IAaA;;EA/BA;AAJA","names":["mounted","methods","video","width","height","faceapi","setInterval","console"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n\r\n    <video id=\"videoElement\" width=\"720\" height=\"560\" autoplay muted></video>\r\n    <button @click=\"startLivenessDetection\">开始活体检测</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as faceapi from 'face-api.js';\r\n\r\nexport default {\r\n  mounted() {\r\n    this.loadModels();\r\n  },\r\n  methods: {\r\n    async loadModels() {\r\n      // 加载模型\r\n      const MODEL_URL = '/models';\r\n      await faceapi.loadModels(MODEL_URL);\r\n      this.enableCamera();\r\n    },\r\n    async enableCamera() {\r\n      const video = document.getElementById('videoElement');\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: {} });\r\n      video.srcObject = stream;\r\n      await faceapi.warmupModels(video);\r\n    },\r\n    async startLivenessDetection() {\r\n      const video = document.getElementById('videoElement');\r\n      const displaySize = { width: video.offsetWidth, height: video.offsetHeight };\r\n      faceapi.matchDimensions(video, displaySize);\r\n\r\n      setInterval(async () => {\r\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\r\n        const resizedDetections = detections.map(d => d.forSize(displaySize));\r\n        const livenessDetected = resizedDetections.every(d => d.expressions[0].probability > 0.5);\r\n\r\n        if (livenessDetected) {\r\n          // 活体检测通过\r\n          console.log('Liveness detected');\r\n        } else {\r\n          // 活体检测失败\r\n          console.log('Liveness not detected');\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}