{"ast":null,"code":"import _defineProperty from \"C:/Users/86134/Desktop/\\u7231\\u8BFB\\u4E66/springboot-vue/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    tackPhoto: {\n      //父组件传过来的状态\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      loadingbut: false,\n      preViewVisible: false,\n      blobFile: null,\n      canvas: null,\n      video: null,\n      mediaStreamTrack: ''\n    };\n  },\n  watch: {\n    tackPhoto: {\n      immediate: true,\n      handler: function handler(newVal) {\n        //监听接收到拍摄状态后，开始调取摄像头权限。如果功能是在一个组件里面，下面步骤可以直接写在自己的触发方法里面\n        if (newVal) {\n          var video = document.querySelector('video');\n          var text = document.getElementById('text'); // var mediaStreamTrack;\n          // 兼容代码\n\n          window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n          if (navigator.mediaDevices === undefined) {\n            navigator.mediaDevices = {};\n          }\n\n          if (navigator.mediaDevices.getUserMedia === undefined) {\n            navigator.mediaDevices.getUserMedia = function (constraints) {\n              var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n              if (!getUserMedia) {\n                return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n              }\n\n              return new Promise(function (resolve, reject) {\n                getUserMedia.call(navigator, constraints, resolve, reject);\n              });\n            };\n          } //摄像头调用配置\n\n\n          var mediaOpts = _defineProperty({\n            audio: false,\n            video: true\n          }, \"video\", {\n            facingMode: \"environment\"\n          });\n\n          var that = this;\n          navigator.mediaDevices.getUserMedia(mediaOpts).then(function (stream) {\n            that.mediaStreamTrack = stream;\n            video = document.querySelector('video');\n\n            if (\"srcObject\" in video) {\n              video.srcObject = stream;\n            } else {\n              video.src = window.URL && window.URL.createObjectURL(stream) || stream;\n            }\n\n            video.play();\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    // 摄像头\n    this.video = document.getElementById('video'); //画布\n\n    this.canvas = document.getElementById('canvas');\n  },\n  methods: {\n    //图片地址转base64格式\n    base64toFile: function base64toFile(base, filename) {\n      var arr = base.split(',');\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var suffix = mime.split(\"/\")[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      } //转换成file对象\n\n\n      return new File([u8arr], \"\".concat(filename, \".\").concat(suffix), {\n        type: mime\n      });\n    },\n    //使用\n    //     this.imgToBase64(imgUrl,base =>{\n    //       let file = this.base64toFile(base,'图片')\n    //     }),\n    takePhone: function takePhone() {\n      //点击拍照截图画面\n      var that = this;\n      that.canvas.getContext('2d').drawImage(this.video, 0, 0, 400, 300);\n      var dataurl = that.canvas.toDataURL('image/png');\n      that.blobFile = that.base64toFile(dataurl, 'camera');\n      that.preViewVisible = true;\n      var img = 'data:image/png;base64,' + img;\n      that.file = that.base64toFile(img); // 得到File对象\n\n      console.log(that.file); // that.imgUrl = window.webkitURL.createObjectURL(file) || window.URL.createObjectURL(file) // imgUrl图片网络路径\n    },\n    takePhoneUpfile: function takePhoneUpfile() {\n      //保存图片\n      this.loadingbut = true;\n      var formData = new FormData();\n      formData.append('file', this.blobFile); //图片内容\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;EACAA;IACAC;MAAA;MACAC,aADA;MAEAC;IAFA;EADA,CADA;EAOAC,IAPA,kBAOA;IACA;MACAC,iBADA;MAEAC,qBAFA;MAGAC,cAHA;MAIAC,YAJA;MAKAC,WALA;MAMAC;IANA;EAQA,CAhBA;EAiBAC;IACAV;MACAW,eADA;MAEAC,OAFA,mBAEAC,MAFA,EAEA;QAAA;QACA;UACA;UACA,2CAFA,CAGA;UAEA;;UACAC;;UAEA;YACAC;UACA;;UACA;YACAA;cACA;;cACA;gBACA;cACA;;cACA;gBACAC;cACA,CAFA;YAGA,CARA;UASA,CArBA,CAuBA;;;UACA;YACAC,YADA;YAEAT;UAFA,YAGA;YAAAU;UAAA,CAHA;;UAQA;UACAH;YACAI;YACAX;;YACA;cACAA;YACA,CAFA,MAEA;cACAA;YACA;;YACAA;UACA,CATA,EASAY,KATA,CASA;YACAC;UACA,CAXA;QAaA;MACA,CAlDA;MAmDAC;IAnDA;EADA,CAjBA;EAwEAC,OAxEA,qBAwEA;IACA;IACA,8CAFA,CAGA;;IACA;EAEA,CA9EA;EA+EAC;IAEA;IACAC,YAHA,wBAGAC,IAHA,EAGAC,QAHA,EAGA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACAC;MACA,CATA,CAUA;;;MACA;QAAA3B;MAAA;IACA,CAfA;IAgBA;IACA;IACA;IACA;IACA4B,SApBA,uBAoBA;MAAA;MACA;MACAV;MACA;MACAA;MACAA;MACA;MACAA,mCAPA,CAOA;;MACAE,uBARA,CASA;IAEA,CA/BA;IAgCAS,eAhCA,6BAgCA;MAAA;MACA;MACA;MACAC,uCAHA,CAGA;IAEA;EArCA;AA/EA","names":["props","tackPhoto","type","default","data","loadingbut","preViewVisible","blobFile","canvas","video","mediaStreamTrack","watch","immediate","handler","newVal","window","navigator","getUserMedia","audio","facingMode","that","catch","console","deep","mounted","methods","base64toFile","base","filename","u8arr","takePhone","takePhoneUpfile","formData"],"sourceRoot":"src/views","sources":["join.vue"],"sourcesContent":["<template>\n  <div class=\"camera-box\" style=\"width: 900px;\">\n    <el-button type='primary' size='small' icon=\"el-icon-camera\" @click=\"tackPhoto=true\" style=\"margin-top: 10px;\">拍照</el-button>\n\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div style=\"text-align: center;font-size: 14px;font-weight: bold;margin-bottom: 10px;\">摄像头</div>\n        <!-- 这里就是摄像头显示的画面 -->\n        <video id=\"video\" width=\"400\" height=\"300\"></video>\n        <div class=\"iCenter\" >\n          <el-button type='primary' size='small' icon=\"el-icon-camera\" @click=\"takePhone\" style=\"margin-top: 10px;\">拍照</el-button>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div style=\"text-align: center;font-size: 14px;font-weight: bold;margin-bottom: 10px;\">拍摄效果</div>\n        <!-- 这里是点击拍照显示的图片画面 -->\n        <canvas id='canvas' width='400' height='300' style=\"display: block;\"></canvas>\n        <el-button :loading=\"loadingbut\" icon=\"el-icon-check\" type='primary' size='small' @click=\"takePhoneUpfile\" style=\"margin-top: 10px;\">保存</el-button>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script>\n\nexport default {\n  props:{\n    tackPhoto:{//父组件传过来的状态\n      type:Boolean,\n      default:false\n    }\n  },\n  data() {\n    return {\n      loadingbut:false,\n      preViewVisible: false,\n      blobFile: null,\n      canvas: null,\n      video: null,\n      mediaStreamTrack: '',\n    }\n  },\n  watch:{\n    tackPhoto:{\n      immediate: true,\n      handler (newVal) {//监听接收到拍摄状态后，开始调取摄像头权限。如果功能是在一个组件里面，下面步骤可以直接写在自己的触发方法里面\n        if (newVal) {\n          var video = document.querySelector('video');\n          var text = document.getElementById('text');\n          // var mediaStreamTrack;\n\n          // 兼容代码\n          window.URL = (window.URL || window.webkitURL || window.mozURL || window.msURL);\n\n          if (navigator.mediaDevices === undefined) {\n            navigator.mediaDevices = {};\n          }\n          if (navigator.mediaDevices.getUserMedia === undefined) {\n            navigator.mediaDevices.getUserMedia = function(constraints) {\n              var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n              if (!getUserMedia) {\n                return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n              }\n              return new Promise(function(resolve, reject) {\n                getUserMedia.call(navigator, constraints, resolve, reject);\n              });\n            }\n          }\n\n          //摄像头调用配置\n          var mediaOpts = {\n            audio: false,\n            video: true,\n            video: { facingMode: \"environment\"} // 或者 \"user\"\n            // video: { width: 1280, height: 720 }\n            // video: { facingMode: { exact: \"environment\" } }// 或者 \"user\"\n          }\n\n          let that=this;\n          navigator.mediaDevices.getUserMedia(mediaOpts).then(function(stream) {\n            that.mediaStreamTrack = stream;\n            video = document.querySelector('video');\n            if (\"srcObject\" in video) {\n              video.srcObject = stream\n            } else {\n              video.src = window.URL && window.URL.createObjectURL(stream) || stream\n            }\n            video.play();\n          }).catch(function (err) {\n            console.log(err)\n          });\n\n        }\n      },\n      deep:true\n    },\n  },\n  mounted() {\n    // 摄像头\n    this.video = document.getElementById('video');\n    //画布\n    this.canvas = document.getElementById('canvas')\n\n  },\n  methods: {\n\n//图片地址转base64格式\n    base64toFile(base, filename){\n      var arr = base.split(',');\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var suffix = mime.split(\"/\")[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      //转换成file对象\n      return new File([u8arr], `${filename}.${suffix}`, { type: mime });\n    },\n//使用\n//     this.imgToBase64(imgUrl,base =>{\n//       let file = this.base64toFile(base,'图片')\n//     }),\n    takePhone() {//点击拍照截图画面\n      let that = this;\n      that.canvas.getContext('2d').drawImage(this.video, 0, 0, 400, 300) ;\n      let dataurl = that.canvas.toDataURL('image/png')\n        that.blobFile = that.base64toFile(dataurl , 'camera');\n      that.preViewVisible = true\n      const img = 'data:image/png;base64,' + img\n      that.file = that.base64toFile(img) // 得到File对象\n      console.log(that.file)\n      // that.imgUrl = window.webkitURL.createObjectURL(file) || window.URL.createObjectURL(file) // imgUrl图片网络路径\n\n    },\n    takePhoneUpfile() {//保存图片\n      this.loadingbut=true;\n      let formData = new FormData()\n      formData.append('file', this.blobFile);//图片内容\n      \n    },\n  }\n}\n</script>\n<style>\n.camera-box #canvas{\n  border: 1px solid #DCDFE6;\n}\n</style>"]},"metadata":{},"sourceType":"module"}