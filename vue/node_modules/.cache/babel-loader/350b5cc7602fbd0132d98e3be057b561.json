{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ref, onMounted } from 'vue';\nexport default {\n  name: 'Home',\n  components: {},\n  props: {},\n\n  data() {\n    return {\n      timer: null,\n      // 定时器（方便清除）\n      show: false,\n      classify: [{\n        encoded: 'TJ202209A10'\n      }, {\n        encoded: 'TJ202209A11'\n      }, {\n        encoded: 'TJ202209A12'\n      }, {\n        encoded: 'TJ202209A13'\n      }, {\n        encoded: 'TJ202209A14'\n      }, {\n        encoded: 'TJ202209A15'\n      }, {\n        encoded: 'TJ202209A16'\n      }, {\n        encoded: 'TJ202209A17'\n      }, {\n        encoded: 'TJ202209A18'\n      }, {\n        encoded: 'TJ202209A19'\n      }, {\n        encoded: 'TJ202209A20'\n      }]\n    };\n  },\n\n  created() {},\n\n  mounted() {},\n\n  methods: {\n    submit(evt) {\n      let target = evt.target;\n\n      if (target.nodeName === \"SPAN\") {\n        target = evt.target.parentNode;\n      }\n\n      target.blur();\n    },\n\n    // 左箭头\n    leftSlide() {\n      // 保存滚动盒子左侧已滚动的距离\n      let left = this.$refs.wrapperCon.scrollLeft;\n      let num = 0;\n      clearInterval(this.timer);\n      this.timer = null;\n      this.timer = setInterval(() => {\n        //   !left:已经滚动到最左侧\n        //   一次性滚动距离（可调节）\n        if (!left || num >= 300) {\n          // 停止滚动\n          clearInterval(this.timer);\n          this.timer = null;\n          return;\n        } // 给滚动盒子元素赋值向左滚动距离\n\n\n        this.$refs.wrapperCon.scrollLeft = left -= 30; // 保存向左滚动距离（方便判断一次性滚动多少距离）\n\n        num += 30;\n      }, 20); // 20：速度（可调节）\n    },\n\n    // 右箭头\n    rightSlide() {\n      // 保存滚动盒子左侧已滚动的距离\n      let left = this.$refs.wrapperCon.scrollLeft; // 保存元素的整体宽度\n\n      let scrollWidth = this.$refs.wrapperCon.scrollWidth; // 保存元素的可见宽度\n\n      let clientWidth = this.$refs.wrapperCon.clientWidth;\n      let num = 0;\n      clearInterval(this.timer);\n      this.timer = setInterval(() => {\n        // 已经滚动距离+可见宽度\n        // left+clientWidth>=scrollWidth：滚动到最右侧\n        // num>=300一次性滚动距离\n        if (left + clientWidth >= scrollWidth || num >= 300) {\n          clearInterval(this.timer);\n          return;\n        } // 给滚动盒子元素赋值向左滚动距离\n\n\n        this.$refs.wrapperCon.scrollLeft = left += 30; // 保存向左滚动距离（方便判断一次性滚动多少距离）\n\n        num += 30;\n      }, 20); // 20：速度（可调节）\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;EACAA,YADA;EAEAC,cAFA;EAGAC,SAHA;;EAIAC;IACA;MACAC,WADA;MACA;MACAC,WAFA;MAGAC,WACA;QAAAC;MAAA,CADA,EAEA;QAAAA;MAAA,CAFA,EAGA;QAAAA;MAAA,CAHA,EAIA;QAAAA;MAAA,CAJA,EAKA;QAAAA;MAAA,CALA,EAMA;QAAAA;MAAA,CANA,EAOA;QAAAA;MAAA,CAPA,EAQA;QAAAA;MAAA,CARA,EASA;QAAAA;MAAA,CATA,EAUA;QAAAA;MAAA,CAVA,EAWA;QAAAA;MAAA,CAXA;IAHA;EAiBA,CAtBA;;EAuBAC,YAvBA;;EAwBAC,WAEA,CA1BA;;EA2BAC;IACAC;MACA;;MACA;QACAC;MACA;;MACAA;IACA,CAPA;;IAQA;IACAC;MACA;MACA;MACA;MACAC;MACA;MACA;QACA;QACA;QACA;UACA;UACAA;UACA;UACA;QACA,CARA,CASA;;;QACA,8CAVA,CAWA;;QACAC;MACA,CAbA,EAaA,EAbA,EANA,CAoBA;IACA,CA9BA;;IAgCA;IACAC;MACA;MACA,4CAFA,CAGA;;MACA,oDAJA,CAKA;;MACA;MACA;MACAF;MACA;QACA;QACA;QACA;QACA;UACAA;UACA;QACA,CAPA,CAQA;;;QACA,8CATA,CAUA;;QACAC;MACA,CAZA,EAYA,EAZA,EATA,CAsBA;IACA;;EAxDA;AA3BA","names":["name","components","props","data","timer","show","classify","encoded","created","mounted","methods","submit","target","leftSlide","clearInterval","num","rightSlide"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-wrapper\"  id=\"bar\" @mouseenter=\"show=true\" @mouseleave=\"show=false\">\r\n    <!-- 文本超出，左右按钮滚动 -->\r\n    <div id=\"click-scroll-X\">\r\n      <div class=\"left_btn\" @click=\"leftSlide()\">\r\n        <button  type=\"button\" class=\"el-carousel__arrow el-carousel__arrow--left\"  v-show=\"show\" >\r\n          <i class=\"el-icon-arrow-left\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <el-main>\r\n      <div class=\"scroll_wrapper\" ref=\"wrapperCon\"  >\r\n        <div class=\"scroll_list\">\r\n          <div class=\"item\" v-for=\"(item, index) in classify\" :key=\"index\">\r\n            {{ item.encoded }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </el-main>\r\n\r\n\r\n      <div class=\"right_btn\"   @click=\"rightSlide()\">\r\n        <button  type=\"button\" class=\"el-carousel__arrow el-carousel__arrow--right\" @click=\"submit\" v-show=\"show\">\r\n          <i class=\"el-icon-arrow-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    \r\n    <div class=\"container\" id=\"test\">\r\n      {{size}}\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nexport default ({\r\n  name: 'Home',\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      timer: null,  // 定时器（方便清除）\r\n      show:false,\r\n      classify: [\r\n        { encoded: 'TJ202209A10' },\r\n        { encoded: 'TJ202209A11' },\r\n        { encoded: 'TJ202209A12' },\r\n        { encoded: 'TJ202209A13' },\r\n        { encoded: 'TJ202209A14' },\r\n        { encoded: 'TJ202209A15' },\r\n        { encoded: 'TJ202209A16' },\r\n        { encoded: 'TJ202209A17' },\r\n        { encoded: 'TJ202209A18' },\r\n        { encoded: 'TJ202209A19' },\r\n        { encoded: 'TJ202209A20' }\r\n      ]\r\n    }\r\n  },\r\n  created() { },\r\n  mounted(){\r\n\r\n  },\r\n  methods: {\r\n    submit(evt) {\r\n      let target = evt.target;\r\n      if(target.nodeName === \"SPAN\"){\r\n        target = evt.target.parentNode;\r\n      }\r\n      target.blur()\r\n    },\r\n    // 左箭头\r\n    leftSlide() {\r\n      // 保存滚动盒子左侧已滚动的距离\r\n      let left = this.$refs.wrapperCon.scrollLeft\r\n      let num = 0\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.timer = setInterval(() => {\r\n        //   !left:已经滚动到最左侧\r\n        //   一次性滚动距离（可调节）\r\n        if (!left || num >= 300) {\r\n          // 停止滚动\r\n          clearInterval(this.timer)\r\n          this.timer = null\r\n          return\r\n        }\r\n        // 给滚动盒子元素赋值向左滚动距离\r\n        this.$refs.wrapperCon.scrollLeft = left -= 30\r\n        // 保存向左滚动距离（方便判断一次性滚动多少距离）\r\n        num += 30\r\n      }, 20)\r\n      // 20：速度（可调节）\r\n    },\r\n\r\n    // 右箭头\r\n    rightSlide() {\r\n      // 保存滚动盒子左侧已滚动的距离\r\n      let left = this.$refs.wrapperCon.scrollLeft\r\n      // 保存元素的整体宽度\r\n      let scrollWidth = this.$refs.wrapperCon.scrollWidth\r\n      // 保存元素的可见宽度\r\n      let clientWidth = this.$refs.wrapperCon.clientWidth\r\n      let num = 0\r\n      clearInterval(this.timer)\r\n      this.timer = setInterval(() => {\r\n        // 已经滚动距离+可见宽度\r\n        // left+clientWidth>=scrollWidth：滚动到最右侧\r\n        // num>=300一次性滚动距离\r\n        if (left + clientWidth >= scrollWidth || num >= 300) {\r\n          clearInterval(this.timer)\r\n          return\r\n        }\r\n        // 给滚动盒子元素赋值向左滚动距离\r\n        this.$refs.wrapperCon.scrollLeft = left += 30\r\n        // 保存向左滚动距离（方便判断一次性滚动多少距离）\r\n        num += 30\r\n      }, 20)\r\n      // 20：速度（可调节）\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang='scss' scoped>\r\n#click-scroll-X {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .left_btn{\r\n    position: relative;\r\n    font-size: 30px;\r\n    cursor: pointer;\r\n  }\r\n  .right_btn {\r\n    position: relative;\r\n    right: 10px;\r\n    font-size: 30px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .scroll_wrapper {\r\n    width: 600px;\r\n    overflow-x: hidden;\r\n    padding-bottom: 10px;\r\n\r\n    .scroll_list {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      .item {\r\n        cursor: pointer;\r\n        width: 146px;\r\n        height: 30px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: 1px solid #ccc;\r\n        border-radius: 3px;\r\n        box-sizing: border-box;\r\n        flex-shrink: 0;\r\n        margin: 0 2px;\r\n      }\r\n    }\r\n  }\r\n}\r\n.el-carousel__arrow{\r\n  border:none;\r\n  outline:0;\r\n  padding:0;\r\n  margin:0;\r\n  height:40px;\r\n  width:40px;\r\n  cursor:pointer;\r\n  -webkit-transition:.3s;\r\n  transition:.3s;\r\n  border-radius:50%;\r\n  background-color:rgba(31,45,61,.11);\r\n  color:#FFF;\r\n  z-index:10;\r\n  -webkit-transform:translateY(-50%);\r\n  transform:translateY(-50%);\r\n  text-align:center;\r\n  font-size:12px}\r\n.el-carousel__arrow--left{\r\n  left:16px\r\n}\r\n.el-carousel__arrow--right{\r\n  right:16px\r\n}\r\n.el-carousel__arrow:hover{\r\n  background-color:rgba(31,45,61,.23)\r\n}\r\n.el-carousel__arrow i{\r\n  cursor:pointer\r\n}\r\n/*隐藏滚动条*/\r\n.scroll_wrapper::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}