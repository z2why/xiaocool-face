{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'join',\n  data: function data() {\n    return {};\n  },\n  methods: {\n    // 打开摄像头\n    openPhoto: function openPhoto() {\n      var _this2 = this;\n\n      // H5调用电脑摄像头API\n      //navigator.mediaDevices.getUserMedia 调用后 会提示用户给予使用媒体输入的许可.返回一个 Promise 对象，\n      //成功后会resolve回调一个 MediaStream 对象。\n      //在H5设备上面调用摄像头也可以通过此种方式，如下的例子表示优先使用前置摄像头\n      //{ audio: true, video: { facingMode: \"user\" } }前摄像头\n      //{ audio: true, video: { facingMode: { exact: \"environment\" } } }强制使用后置摄像头\n      //设置获取接近 1280x720 的相机分辨率\n      //{ audio: true, video: { width: 1280, height: 720 } };\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: 1280,\n          height: 720\n        }\n      }).then(function (success) {\n        // 摄像头开启成功\n        _this2.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n        // 实时拍照效果\n\n        _this2.$refs[\"video\"].play();\n      }).catch(function (error) {\n        //摄像头开启失败\n        console.error(\"摄像头开启失败\");\n      });\n\n      var _this = this;\n\n      setTimeout(function () {\n        _this.photograph();\n      }, 2000);\n    },\n    dataURLtoFile: function dataURLtoFile(dataurl, filename) {\n      var arr = dataurl.split(','),\n          mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]),\n          n = bstr.length,\n          u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    },\n    // 拍照\n    photograph: function photograph() {\n      var photoInfo = this.$refs[\"canvas\"].getContext(\"2d\"); // 把当前内容渲染到canvas上\n\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480); // //canvas图片 转base64格式、图片格式转换、图片质量压缩\n\n      var img = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\");\n      var imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\", 0.7);\n      var string = imgBase64.replace(\"data:image/jpeg;base64,\", \"\");\n      string = this.dataURLtoFile(imgBase64, 'camera.jpg');\n      console.log(img);\n      var url = 'https://xiaoku.store:5000/recognition';\n      var params = {\n        // title: '1213',\n        // desc: '321'\n        image: img\n      };\n      axios.post(url, params).then(function (res) {\n        console.log(res.data);\n      }).catch(function (err) {\n        alert(err);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AACA;EACAA,YADA;EAGAC,IAHA,kBAGA;IACA;EAGA,CAPA;EAUAC;IACA;IACAC,SAFA,uBAEA;MAAA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,uBACAC,YADA,CACA;QACAC,WADA;QACAC;UAAAC;UAAAC;QAAA;MADA,CADA,EAIAC,IAJA,CAIA;QACA;QACA,0CAFA,CAEA;QACA;;QACA;MACA,CATA,EAUAC,KAVA,CAUA;QACA;QACAC;MACA,CAbA;;MAcA;;MACAC;QACAC;MACA,CAFA,EAEA,IAFA;IAIA,CA9BA;IAiCAC,aAjCA,yBAiCAC,OAjCA,EAiCAC,QAjCA,EAiCA;MACA;MAAA,IACAC,iCADA;MAAA,IAEAC,mBAFA;MAAA,IAGAC,eAHA;MAAA,IAIAC,yBAJA;;MAKA;QACAA;MACA;;MACA;QAAAC;MAAA;IACA,CA3CA;IA4CA;IACAC,UA7CA,wBA6CA;MACA,sDADA,CAEA;;MACAC,yDAHA,CAKA;;MACA;MACA;MACA;MACAC;MACAb;MACA;MACA;QACA;QACA;QACAc;MAHA;MAKAC,wBACAjB,IADA,CACA;QACAE;MACA,CAHA,EAIAD,KAJA,CAIA;QACAiB;MACA,CANA;IAOA;EArEA;AAVA","names":["name","data","methods","openPhoto","navigator","getUserMedia","audio","video","width","height","then","catch","console","setTimeout","_this","dataURLtoFile","dataurl","filename","mime","bstr","n","u8arr","type","photograph","photoInfo","string","image","axios","alert"],"sourceRoot":"src/views","sources":["join.vue"],"sourcesContent":["<template>\n\n\n<div>\n  <!--开启摄像头-->\n  <el-button size=\"mini\"   @click=\"openPhoto\" >摄像头</el-button>\n  <!--canvas截取流-->\n  <canvas ref=\"canvas\" width=\"500\" height=\"500\"></canvas>\n  <!--图片展示-->\n  <video ref=\"video\" width=\"500\" height=\"500\" autoplay></video>\n  <!--确认-->\n  <el-button size=\"mini\"  @click=\"photograph\">拍照</el-button>\n\n    </div>\n</template>\n<style scoped lang=\"less\">\n\n</style>\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'join',\n\n  data() {\n    return {\n\n    };\n  },\n\n\n  methods: {\n    // 打开摄像头\n    openPhoto() {\n      // H5调用电脑摄像头API\n      //navigator.mediaDevices.getUserMedia 调用后 会提示用户给予使用媒体输入的许可.返回一个 Promise 对象，\n      //成功后会resolve回调一个 MediaStream 对象。\n      //在H5设备上面调用摄像头也可以通过此种方式，如下的例子表示优先使用前置摄像头\n      //{ audio: true, video: { facingMode: \"user\" } }前摄像头\n      //{ audio: true, video: { facingMode: { exact: \"environment\" } } }强制使用后置摄像头\n      //设置获取接近 1280x720 的相机分辨率\n      //{ audio: true, video: { width: 1280, height: 720 } };\n      navigator.mediaDevices\n          .getUserMedia({\n            audio: true, video: { width: 1280, height: 720 }\n          })\n          .then((success) => {\n            // 摄像头开启成功\n            this.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n            // 实时拍照效果\n            this.$refs[\"video\"].play();\n          })\n          .catch((error) => {\n            //摄像头开启失败\n            console.error(\"摄像头开启失败\");\n          });\n      let _this=this\n      setTimeout(function()  {\n        _this.photograph()\n      }, 2000);\n\n    },\n\n\n    dataURLtoFile(dataurl, filename) {\n      let arr = dataurl.split(','),\n          mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]),\n          n = bstr.length,\n          u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename, {type: mime});\n    },\n    // 拍照\n    photograph() {\n      let photoInfo= this.$refs[\"canvas\"].getContext(\"2d\");\n      // 把当前内容渲染到canvas上\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480);\n\n      // //canvas图片 转base64格式、图片格式转换、图片质量压缩\n      let img = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\");\n      let imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\", 0.7);\n      let string = imgBase64.replace(\"data:image/jpeg;base64,\", \"\");\n      string=this.dataURLtoFile(imgBase64, 'camera.jpg');\n      console.log(img)\n        var url = 'https://xiaoku.store:5000/recognition'\n        var params = {\n          // title: '1213',\n          // desc: '321'\n          image:img\n        }\n         axios.post(url, params)\n            .then(res => {\n              console.log(res.data)\n            })\n            .catch(err => {\n              alert(err)\n            })\n      }\n    }\n\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}