{"ast":null,"code":"import \"core-js/modules/es.object.seal.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VueChatEmoji, emojis } from 'vue-chat-emoji';\nexport default {\n  name: 'Chat',\n  components: {\n    Emoji: VueChatEmoji\n  },\n  props: {\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      recText: '',\n      sendText: '',\n      editor: null,\n      toolbarConfig: {},\n      editorConfig: {\n        placeholder: '请输入内容...'\n      },\n      mode: 'default' // or 'simple'\n\n    };\n  },\n  watch: {\n    receiveMsg: function receiveMsg() {\n      this.receiveMsgHandle();\n    }\n  },\n  methods: {\n    selectedEmoji: function selectedEmoji(args) {\n      console.log(args);\n      /* return {...}*/\n    },\n    receiveMsgHandle: function receiveMsgHandle() {\n      this.recText += this.receiveMsg;\n    },\n    onCreated: function onCreated(editor) {\n      this.editor = Object.seal(editor); // 一定要用 Object.seal() ，否则会报错\n    },\n    beforeDestroy: function beforeDestroy() {\n      var editor = this.editor;\n      if (editor == null) return;\n      editor.destroy(); // 组件销毁时，及时销毁编辑器\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAEA;EACAA,YADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAG,cAFA;MAGAF;IAHA;EALA,CALA;EAgBAG,IAhBA,kBAgBA;IACA;MACAC,WADA;MAEAC,YAFA;MAGAC,YAHA;MAIAC,iBAJA;MAKAC;QAAAC;MAAA,CALA;MAMAC,eANA,CAMA;;IANA;EAQA,CAzBA;EA0BAC;IACAV,UADA,wBACA;MACA;IACA;EAHA,CA1BA;EA+BAW;IACAC,aADA,yBACAC,IADA,EACA;MACAC;MAAA;IACA,CAHA;IAIAC,gBAJA,8BAIA;MACA;IACA,CANA;IAOAC,SAPA,qBAOAX,MAPA,EAOA;MACA,kCADA,CACA;IACA,CATA;IAUAY,aAVA,2BAUA;MACA;MACA;MACAZ,iBAHA,CAGA;IACA;EAdA;AA/BA","names":["name","components","Emoji","props","client","type","default","receiveMsg","require","data","recText","sendText","editor","toolbarConfig","editorConfig","placeholder","mode","watch","methods","selectedEmoji","args","console","receiveMsgHandle","onCreated","beforeDestroy"],"sourceRoot":"src/views/meeting/components","sources":["Chat.vue"],"sourcesContent":["<template>\n  <div class=\"Chat-container\">\n    <el-input v-model=\"recText\" :rows=\"23.5\" type=\"textarea\" readonly placeholder=\"还没有人聊天...\" />\n    <el-input v-model=\"sendText\" placeholder=\"请输入内容\" maxlength=\"64\"  class=\"input-with-select\">\n   <Emoji></Emoji>\n<!--      <Toolbar-->\n<!--          style=\"border-bottom: 1px solid #ccc\"-->\n<!--          :editor=\"editor\"-->\n<!--          :defaultConfig=\"toolbarConfig\"-->\n<!--          :mode=\"mode\"-->\n<!--      />-->\n<!--    <Editor-->\n<!--        style=\"height: 230px; overflow-y: hidden;\"-->\n<!--        v-model=\"recText\"-->\n<!--        :defaultConfig=\"editorConfig\"-->\n<!--        :mode=\"mode\"-->\n<!--        @onCreated=\"onCreated\"-->\n<!--    />-->\n      <el-button slot=\"prepend\" size=\"mini\" icon=\"el-icon-message-solid\" @click=\"$emit('noticeEvent',sendText)\" />\n      <el-button slot=\"append\" size=\"mini\" icon=\"el-icon-s-promotion\" @click=\"$emit('chatEvent',sendText);sendText=''\" />\n    </el-input>\n  </div>\n</template>\n\n<script>\nimport { VueChatEmoji, emojis } from 'vue-chat-emoji';\n\nexport default {\n  name: 'Chat',\n  components: {\n    Emoji: VueChatEmoji\n  },\n  props: {\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      recText: '',\n      sendText: '',\n      editor: null,\n      toolbarConfig: { },\n      editorConfig: { placeholder: '请输入内容...' },\n      mode: 'default', // or 'simple'\n    }\n  },\n  watch: {\n    receiveMsg() {\n      this.receiveMsgHandle()\n    }\n  },\n  methods: {\n    selectedEmoji(args) {\n      console.log(args); /* return {...}*/\n    },\n    receiveMsgHandle() {\n      this.recText += this.receiveMsg\n    },\n    onCreated(editor) {\n      this.editor = Object.seal(editor) // 一定要用 Object.seal() ，否则会报错\n    },\n    beforeDestroy() {\n      const editor = this.editor\n      if (editor == null) return\n      editor.destroy() // 组件销毁时，及时销毁编辑器\n    }\n  }\n}\n</script>\n\n\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}