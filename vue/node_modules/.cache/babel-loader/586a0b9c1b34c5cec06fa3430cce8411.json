{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'join',\n  data: function data() {\n    return {};\n  },\n  methods: {\n    // 打开摄像头\n    openPhoto: function openPhoto() {\n      var _this2 = this;\n\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: 1280,\n          height: 720\n        }\n      }).then(function (success) {\n        // 摄像头开启成功\n        _this2.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n        // 实时拍照效果\n\n        _this2.$refs[\"video\"].play();\n      }).catch(function (error) {\n        //摄像头开启失败\n        console.error(\"摄像头开启失败\");\n      });\n\n      var _this = this;\n\n      setTimeout(function () {\n        _this.photograph();\n      }, 2000);\n    },\n    // getDataUri(url, callback){\n    //\n    //   let image = new Image()\n    //\n    //   image.onload = () => {\n    //\n    //     let canvas = document.createElement('canvas');\n    //\n    //     canvas.width = this.naturalWidth\n    //\n    //     canvas.height = this.naturalHeight\n    //\n    //     canvas.getContext('2d').drawImage(this, 0, 0)\n    //\n    //     callback(canvas.toDataUrl('image/png').replace(/^data:image\\/(png|jpg);base64,/, ''))\n    //\n    //     callback(canvas.toDataURL('image/png'))\n    //\n    //   }\n    //\n    //   return  image.src = url\n    //\n    // },\n    base64toFile: function base64toFile(dataBase64) {\n      var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'file';\n      var arr = dataBase64.split(',');\n      var mime = arr[0].match(/:(.*?);/)[1]; //设置file⽂件流的type名称\n\n      var suffix = mime.split('/')[1]; //设置file⽂件流的name名称\n\n      var bstr = window.atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], \"\".concat(filename, \".\").concat(suffix), {\n        type: mime\n      });\n    },\n    // 拍照\n    photograph: function photograph() {\n      var photoInfo = this.$refs[\"canvas\"].getContext(\"2d\"); // 把当前内容渲染到canvas上\n\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480); // //canvas图片 转base64格式、图片格式转换、图片质量压缩\n\n      var img = this.$refs[\"canvas\"].toDataURL(\"image/jpg\");\n      var imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpg\", 0.7);\n      var string = imgBase64.replace(\"data:image/jpg;base64,\", \"\");\n      string = this.base64toFile(imgBase64, 'camera');\n      console.log(string);\n      var url = 'https://xiaoku.store:5000/recognition';\n      var params = {\n        // title: '1213',\n        // desc: '321'\n        image: string\n      };\n      axios.post(url, params).then(function (res) {\n        console.log(res.data);\n      }).catch(function (err) {\n        alert(err);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AACA;EACAA,YADA;EAGAC,IAHA,kBAGA;IACA;EAGA,CAPA;EAUAC;IACA;IACAC,SAFA,uBAEA;MAAA;;MACAC,uBACAC,YADA,CACA;QACAC,WADA;QACAC;UAAAC;UAAAC;QAAA;MADA,CADA,EAIAC,IAJA,CAIA;QACA;QACA,0CAFA,CAEA;QACA;;QACA;MACA,CATA,EAUAC,KAVA,CAUA;QACA;QACAC;MACA,CAbA;;MAcA;;MACAC;QACAC;MACA,CAFA,EAEA,IAFA;IAIA,CAtBA;IAyBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGAC,YAlDA,wBAkDAC,UAlDA,EAkDA;MAAA;MACA;MACA,sCAFA,CAEA;;MACA,gCAHA,CAGA;;MACA;MACA;MACA;;MACA;QACAC;MACA;;MACA;QACAC;MADA;IAGA,CA/DA;IAiEA;IACAC,UAlEA,wBAkEA;MACA,sDADA,CAEA;;MACAC,yDAHA,CAKA;;MACA;MACA;MACA;MACAC;MACAT;MACA;MACA;QACA;QACA;QACAU;MAHA;MAKAC,wBACAb,IADA,CACA;QACAE;MACA,CAHA,EAIAD,KAJA,CAIA;QACAa;MACA,CANA;IAOA;EA1FA;AAVA","names":["name","data","methods","openPhoto","navigator","getUserMedia","audio","video","width","height","then","catch","console","setTimeout","_this","base64toFile","dataBase64","u8arr","type","photograph","photoInfo","string","image","axios","alert"],"sourceRoot":"src/views","sources":["join.vue"],"sourcesContent":["<template>\n\n\n<div>\n  <!--开启摄像头-->\n  <el-button size=\"mini\"   @click=\"openPhoto\" >摄像头</el-button>\n  <!--canvas截取流-->\n  <canvas ref=\"canvas\" width=\"500\" height=\"500\"></canvas>\n  <!--图片展示-->\n  <video ref=\"video\" width=\"500\" height=\"500\" muted autoplay playsinline></video>\n  <!--确认-->\n  <el-button size=\"mini\"  @click=\"photograph\">拍照</el-button>\n\n    </div>\n</template>\n<style scoped lang=\"less\">\n\n</style>\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'join',\n\n  data() {\n    return {\n\n    };\n  },\n\n\n  methods: {\n    // 打开摄像头\n    openPhoto() {\n      navigator.mediaDevices\n          .getUserMedia({\n            audio: true, video: { width: 1280, height: 720 }\n          })\n          .then((success) => {\n            // 摄像头开启成功\n            this.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n            // 实时拍照效果\n            this.$refs[\"video\"].play();\n          })\n          .catch((error) => {\n            //摄像头开启失败\n            console.error(\"摄像头开启失败\");\n          });\n      let _this=this\n      setTimeout(function()  {\n        _this.photograph()\n      }, 2000);\n\n    },\n\n\n    // getDataUri(url, callback){\n    //\n    //   let image = new Image()\n    //\n    //   image.onload = () => {\n    //\n    //     let canvas = document.createElement('canvas');\n    //\n    //     canvas.width = this.naturalWidth\n    //\n    //     canvas.height = this.naturalHeight\n    //\n    //     canvas.getContext('2d').drawImage(this, 0, 0)\n    //\n    //     callback(canvas.toDataUrl('image/png').replace(/^data:image\\/(png|jpg);base64,/, ''))\n    //\n    //     callback(canvas.toDataURL('image/png'))\n    //\n    //   }\n    //\n    //   return  image.src = url\n    //\n    // },\n\n\n    base64toFile (dataBase64, filename = 'file') {\n      let arr = dataBase64.split(',')\n      let mime = arr[0].match(/:(.*?);/)[1]  //设置file⽂件流的type名称\n      let suffix = mime.split('/')[1]  //设置file⽂件流的name名称\n      const bstr = window.atob(arr[1]);\n      let n = bstr.length\n      const u8arr = new Uint8Array(n)\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n      return new File([u8arr], `${filename}.${suffix}`, {\n        type: mime\n      })\n    },\n\n    // 拍照\n    photograph() {\n      let photoInfo= this.$refs[\"canvas\"].getContext(\"2d\");\n      // 把当前内容渲染到canvas上\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480);\n\n      // //canvas图片 转base64格式、图片格式转换、图片质量压缩\n      let img = this.$refs[\"canvas\"].toDataURL(\"image/jpg\");\n      let imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpg\", 0.7);\n      let string = imgBase64.replace(\"data:image/jpg;base64,\", \"\");\n      string=this.base64toFile(imgBase64, 'camera');\n      console.log(string)\n        var url = 'https://xiaoku.store:5000/recognition'\n        var params = {\n          // title: '1213',\n          // desc: '321'\n          image:string\n        }\n         axios.post(url, params)\n            .then(res => {\n              console.log(res.data)\n            })\n            .catch(err => {\n              alert(err)\n            })\n      }\n    }\n\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}