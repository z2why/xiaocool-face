{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VEmojiPicker } from 'v-emoji-picker';\nexport default {\n  name: 'Chat',\n  components: {\n    VEmojiPicker\n  },\n  props: {\n    someData: {\n      type: Object,\n      default: \"\"\n    },\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\n\n  created() {\n    console.log(this.someData);\n    this.request.get(\"/message/getMsg/\", {\n      params: {\n        meetingId: this.someData.meetingId\n      }\n    }).then(res => {\n      if (res.code === \"200\") {\n        let Msgdata = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (i === res.data.length - 1) {\n            Msgdata[i] = res.data[i].nickname + \":\" + res.data[i].content;\n          } else {\n            Msgdata[i] = res.data[i].nickname + \":\" + res.data[i].content + \"\\n\";\n          }\n        }\n\n        Msgdata = Msgdata.toString().replace(/,/g, \"\");\n        this.recText = Msgdata;\n        this.scrollBottom();\n      } else {\n        this.$message.success(\"ËÅäÂ§©ËÆ∞ÂΩïÂá∫ÈîôÂï¶ÔºÅ\");\n      }\n    });\n  },\n\n  mounted() {\n    window.addEventListener('click', this.handleOutsideClick);\n    this.getScreenSize();\n  },\n\n  data() {\n    return {\n      visible: false,\n      recText: '',\n      sendText: '',\n      row: '',\n      editor: null,\n      screenWidth: '',\n      screenHeight: '',\n      toolbarConfig: {},\n      editorConfig: {\n        placeholder: 'ËØ∑ËæìÂÖ•ÂÜÖÂÆπ...'\n      },\n      mode: 'default' // or 'simple'\n\n    };\n  },\n\n  watch: {\n    receiveMsg() {\n      this.receiveMsgHandle();\n    }\n\n  },\n  methods: {\n    getScreenSize() {\n      this.screenWidth = document.body.clientWidth;\n      this.screenHeight = document.body.clientHeight;\n\n      window.onresize = () => {\n        return (() => {\n          this.screenWidth = document.body.clientWidth;\n          this.screenHeight = document.body.clientHeight;\n        })();\n      };\n\n      if (this.screenHeight > 900) {\n        this.row = 21;\n        console.log(\"=============21\");\n      } else {\n        this.row = 15;\n        console.log(\"=============15\");\n      }\n    },\n\n    scrollBottom() {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          const textarea = document.getElementById('textarea_id');\n          textarea.scrollTop = textarea.scrollHeight;\n        }, 13);\n      });\n    },\n\n    handleOutsideClick(event) {\n      // Ëé∑ÂèñÁªÑ‰ª∂ÁöÑÊ†πÂÖÉÁ¥†\n      const container = this.$el; // Âà§Êñ≠ÁÇπÂáª‰∫ã‰ª∂ÁöÑÁõÆÊ†áÊòØÂê¶Âú®ÁªÑ‰ª∂‰ª•Â§ñ\n\n      if (!container.contains(event.target)) {\n        this.closePopover();\n      }\n    },\n\n    closePopover() {\n      this.visible = false;\n    },\n\n    togglePopover() {\n      this.visible = !this.visible;\n    },\n\n    noclosePopover() {\n      this.visible = true;\n    },\n\n    selectEmoji(emoji) {\n      console.log(emoji);\n      var elInput = document.getElementById('emojiInput'); //Ëé∑ÂèñËæìÂÖ•Ê°ÜÂÖÉÁ¥†\n      // console.log(elInput);\n\n      var start = elInput.selectionStart; // ËÆ∞ÂΩïÂÖâÊ†áÂºÄÂßãÁöÑ‰ΩçÁΩÆ\n\n      var end = elInput.selectionEnd; // ËÆ∞ÂΩïÈÄâ‰∏≠ÁöÑÂ≠óÁ¨¶ ÊúÄÂêéÁöÑÂ≠óÁ¨¶ÁöÑ‰ΩçÁΩÆ\n\n      if (start === undefined || end === undefined) return;\n      var txt = elInput.value; // Â∞ÜË°®ÊÉÖÊ∑ªÂä†Âà∞ÈÄâ‰∏≠ÁöÑÂÖâÊ†á‰ΩçÁΩÆ\n\n      var result = txt.substring(0, start) + emoji.data + txt.substring(end);\n      elInput.value = result; // ËµãÂÄºÁªôinputÁöÑvalue\n      // ÈáçÁΩÆÂÖâÊ†á‰ΩçÁΩÆ\n\n      elInput.focus();\n      elInput.selectionStart = start + emoji.data.length;\n      elInput.selectionEnd = start + emoji.data.length;\n      console.log(result);\n      this.sendText = result; // ËµãÂÄº(Ê≥®ÊÑèËøôÈáå‰∏ÄÂÆöË¶ÅËµãÂÄºÁªôË°®ÊÉÖËæìÂÖ•Ê°ÜÁªëÂÆöÁöÑÈÇ£‰∏™ÂÄº)\n    },\n\n    receiveMsgHandle() {\n      this.recText += this.receiveMsg;\n      this.scrollBottom();\n    },\n\n    enterSearch() {\n      document.onkeydown = e => {\n        //13Ë°®‚Ω∞ÂõûËΩ¶ÈîÆÔºåbaseURIÊòØÂΩìÂâçÈ°µ‚æØÁöÑÂú∞ÂùÄÔºå‰∏∫‰∫ÜÊõ¥‰∏•Ë∞®Ôºå‰πüÂèØ‰ª•Âä†Âà´ÁöÑÔºåÂèØ‰ª•ÊâìÂç∞eÁúã‚ºÄ‰∏ã\n        //ÂõûËΩ¶ÂêéÊâß‚æèÊêúÁ¥¢‚ΩÖÊ≥ï\n        this.$emit('chatEvent', this.sendText);\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAEA;EACAA,YADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IASAE;MACAH,YADA;MAEAI,cAFA;MAGAH;IAHA;EATA,CALA;;EAoBAI;IACAC;IACA;MACAC;QACAC;MADA;IADA,GAIAC,IAJA,CAIAC;MACA;QACA;;QACA,0CACA;UACA;YACAC;UAAA,CADA,MAEA;YACAA;UACA;QAEA;;QACAA;QACA;QACA;MAEA,CAfA,MAgBA;QACA;MACA;IACA,CAxBA;EA2BA,CAjDA;;EAqDAC;IACAC;IACA;EAEA,CAzDA;;EA0DAC;IACA;MACAC,cADA;MAEAC,WAFA;MAGAC,YAHA;MAIAC,OAJA;MAKAC,YALA;MAMAC,eANA;MAOAC,gBAPA;MAQAC,iBARA;MASAC;QAAAC;MAAA,CATA;MAUAC,eAVA,CAUA;;IAVA;EAYA,CAvEA;;EAwEAC;IACAvB;MACA;IACA;;EAHA,CAxEA;EA8EAwB;IACAC;MACA;MACA;;MACAf;QACA;UACA;UACA;QACA,CAHA;MAGA,CAJA;;MAKA;QACA;QACAP;MACA,CAHA,MAIA;QACA;QACAA;MAEA;IAEA,CAnBA;;IAoBAuB;MACA;QACAC;UACA;UACAC;QACA,CAHA,EAGA,EAHA;MAIA,CALA;IAMA,CA3BA;;IA6BAC;MACA;MACA,2BAFA,CAIA;;MACA;QACA;MACA;IACA,CArCA;;IAsCAC;MACA;IACA,CAxCA;;IAyCAC;MACA;IACA,CA3CA;;IA4CAC;MACA;IACA,CA9CA;;IA+CAC;MACA9B;MACA,oDAFA,CAEA;MACA;;MACA,mCAJA,CAIA;;MACA,+BALA,CAKA;;MACA;MACA,wBAPA,CAQA;;MACA,aACA+B,yDADA;MAEAC,uBAXA,CAWA;MACA;;MACAA;MACAA;MACAA;MACAhC;MACA,uBAjBA,CAiBA;IAEA,CAlEA;;IAmEAiC;MACA;MACA;IACA,CAtEA;;IAuEAC;MACAC;QACA;QACA;QAEA;MAEA,CANA;IAOA;;EA/EA;AA9EA","names":["name","components","VEmojiPicker","props","someData","type","default","client","receiveMsg","require","created","console","params","meetingId","then","res","Msgdata","mounted","window","data","visible","recText","sendText","row","editor","screenWidth","screenHeight","toolbarConfig","editorConfig","placeholder","mode","watch","methods","getScreenSize","scrollBottom","setTimeout","textarea","handleOutsideClick","closePopover","togglePopover","noclosePopover","selectEmoji","txt","elInput","receiveMsgHandle","enterSearch","document"],"sourceRoot":"src/views/meeting/components","sources":["Chat.vue"],"sourcesContent":["<template>\n  <div class=\"Chat-container\" @click=\"closePopover\">\n    <el-input v-model=\"recText\" id=\"textarea_id\"  type=\"textarea\" style=\"font-size: large;user-select: none;-webkit-user-select: auto\" readonly placeholder=\"ËøòÊ≤°Êúâ‰∫∫ËÅäÂ§©...\" />\n    <el-popover\n        ref=\"popverRef\"\n        trigger=\"click\"\n        v-model=\"visible\"\n    >\n      <!-- Ëß¶Âèë‰∫ã‰ª∂ -->\n\n      <!-- ÂºπÊ°ÜÂÜÖÂÆπ -->\n      <div class=\"div_content\" style=\"position: absolute;bottom: 1px\" @click.stop=\"noclosePopover\">\n        <VEmojiPicker @select=\"selectEmoji\" />\n      </div>\n    </el-popover>\n<!--    <el-button   slot=\"prepend\" type=\"text\" size=\"mini\"  @click=\"visible = !visible\">üòä</el-button>-->\n    <el-input  id=\"emojiInput\" v-model=\"sendText\" placeholder=\"ËØ∑ËæìÂÖ•ÂÜÖÂÆπ\" maxlength=\"64\"  class=\"input-with-select\"  @keyup.enter.native=\"$emit('chatEvent',sendText);sendText=''\">\n      <el-button slot=\"prepend\" size=\"mini\"  @click.stop=\"togglePopover\">üòä</el-button>\n      <el-button slot=\"append\" size=\"mini\" icon=\"el-icon-s-promotion\"\n                 @click=\"$emit('chatEvent',sendText);sendText=''\"  />\n    </el-input>\n\n\n  </div>\n</template>\n\n<script>\n\n\nimport { VEmojiPicker } from 'v-emoji-picker';\n\nexport default {\n  name: 'Chat',\n  components: {\n    VEmojiPicker\n  },\n  props: {\n    someData: {\n      type: Object,\n      default: \"\",\n    },\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\ncreated(){\n        console.log(this.someData)\n        this.request.get(\"/message/getMsg/\", {\n          params: {\n            meetingId:this.someData.meetingId\n          }\n        }).then(res => {\n          if (res.code===\"200\"){\n            let Msgdata=[]\n            for (let i=0;i<res.data.length;i++)\n            {\n              if (i===res.data.length-1){\n              Msgdata[i]=res.data[i].nickname+\":\"+ res.data[i].content}\n              else {\n                Msgdata[i]=res.data[i].nickname+\":\"+ res.data[i].content+\"\\n\"\n              }\n\n            }\n            Msgdata = Msgdata.toString().replace(/,/g, \"\");\n            this.recText= Msgdata\n            this.scrollBottom();\n\n          }\n          else {\n            this.$message.success(\"ËÅäÂ§©ËÆ∞ÂΩïÂá∫ÈîôÂï¶ÔºÅ\")\n          }\n        })\n\n\n},\n\n\n\n  mounted() {\n    window.addEventListener('click', this.handleOutsideClick);\n    this.getScreenSize();\n\n  },\n  data() {\n    return {\n      visible: false,\n      recText: '',\n      sendText: '',\n      row:'',\n      editor: null,\n      screenWidth: '',\n      screenHeight: '',\n      toolbarConfig: { },\n      editorConfig: { placeholder: 'ËØ∑ËæìÂÖ•ÂÜÖÂÆπ...' },\n      mode: 'default', // or 'simple'\n    }\n  },\n  watch: {\n    receiveMsg() {\n      this.receiveMsgHandle()\n    }\n  },\n\n  methods: {\n    getScreenSize() {\n      this.screenWidth = document.body.clientWidth;\n      this.screenHeight = document.body.clientHeight\n      window.onresize = () => {\n        return (() => {\n          this.screenWidth = document.body.clientWidth;\n          this.screenHeight = document.body.clientHeight;\n        })();};\n     if (this.screenHeight>900) {\n       this.row=21\n       console.log(\"=============21\")\n     }\n     else {\n       this.row=15\n       console.log(\"=============15\")\n\n     }\n\n    },\n    scrollBottom(){\n    this.$nextTick(() => {\n      setTimeout(() => {\n        const textarea = document.getElementById('textarea_id');\n        textarea.scrollTop = textarea.scrollHeight;\n      }, 13)\n    })\n  },\n\n    handleOutsideClick(event) {\n      // Ëé∑ÂèñÁªÑ‰ª∂ÁöÑÊ†πÂÖÉÁ¥†\n      const container = this.$el;\n\n      // Âà§Êñ≠ÁÇπÂáª‰∫ã‰ª∂ÁöÑÁõÆÊ†áÊòØÂê¶Âú®ÁªÑ‰ª∂‰ª•Â§ñ\n      if (!container.contains(event.target)) {\n        this.closePopover();\n      }\n    },\n    closePopover() {\n      this.visible = false;\n    },\n    togglePopover() {\n      this.visible = !this.visible;\n    },\n    noclosePopover() {\n      this.visible = true;\n    },\n    selectEmoji(emoji) {\n      console.log(emoji)\n      var elInput = document.getElementById('emojiInput')//Ëé∑ÂèñËæìÂÖ•Ê°ÜÂÖÉÁ¥†\n      // console.log(elInput);\n      var start = elInput.selectionStart // ËÆ∞ÂΩïÂÖâÊ†áÂºÄÂßãÁöÑ‰ΩçÁΩÆ\n      var end = elInput.selectionEnd // ËÆ∞ÂΩïÈÄâ‰∏≠ÁöÑÂ≠óÁ¨¶ ÊúÄÂêéÁöÑÂ≠óÁ¨¶ÁöÑ‰ΩçÁΩÆ\n      if (start === undefined || end === undefined) return\n      var txt = elInput.value\n      // Â∞ÜË°®ÊÉÖÊ∑ªÂä†Âà∞ÈÄâ‰∏≠ÁöÑÂÖâÊ†á‰ΩçÁΩÆ\n      var result =\n          txt.substring(0, start) + emoji.data + txt.substring(end)\n      elInput.value = result // ËµãÂÄºÁªôinputÁöÑvalue\n      // ÈáçÁΩÆÂÖâÊ†á‰ΩçÁΩÆ\n      elInput.focus()\n      elInput.selectionStart = start + emoji.data.length\n      elInput.selectionEnd = start + emoji.data.length\n      console.log(result)\n      this.sendText= result // ËµãÂÄº(Ê≥®ÊÑèËøôÈáå‰∏ÄÂÆöË¶ÅËµãÂÄºÁªôË°®ÊÉÖËæìÂÖ•Ê°ÜÁªëÂÆöÁöÑÈÇ£‰∏™ÂÄº)\n\n    },\n    receiveMsgHandle() {\n      this.recText += this.receiveMsg\n      this.scrollBottom()\n    },\n    enterSearch(){\n      document.onkeydown = e =>{\n        //13Ë°®‚Ω∞ÂõûËΩ¶ÈîÆÔºåbaseURIÊòØÂΩìÂâçÈ°µ‚æØÁöÑÂú∞ÂùÄÔºå‰∏∫‰∫ÜÊõ¥‰∏•Ë∞®Ôºå‰πüÂèØ‰ª•Âä†Âà´ÁöÑÔºåÂèØ‰ª•ÊâìÂç∞eÁúã‚ºÄ‰∏ã\n          //ÂõûËΩ¶ÂêéÊâß‚æèÊêúÁ¥¢‚ΩÖÊ≥ï\n\n          this.$emit('chatEvent', this.sendText)\n\n      }\n    },\n\n\n  }\n}\n</script>\n\n\n\n<style lang=\"scss\" scoped>\n::v-deep .el-popover{\n  padding: 0;\n\n}\n.textarea_id{\n\n  -webkit-user-select:auto; /*webkitÊµèËßàÂô®*/\n\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}