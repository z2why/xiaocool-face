{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VEmojiPicker } from 'v-emoji-picker';\nexport default {\n  name: 'Chat',\n  components: {\n    VEmojiPicker\n  },\n  props: {\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      // pack: packData,\n      recText: '',\n      sendText: '',\n      editor: null,\n      toolbarConfig: {},\n      editorConfig: {\n        placeholder: '请输入内容...'\n      },\n      mode: 'default' // or 'simple'\n\n    };\n  },\n\n  watch: {\n    receiveMsg() {\n      this.receiveMsgHandle();\n    }\n\n  },\n  methods: {\n    selectEmoji(emoji) {\n      console.log(emoji);\n    },\n\n    receiveMsgHandle() {\n      this.recText += this.receiveMsg;\n    },\n\n    onCreated(editor) {\n      this.editor = Object.seal(editor); // 一定要用 Object.seal() ，否则会报错\n    },\n\n    beforeDestroy() {\n      const editor = this.editor;\n      if (editor == null) return;\n      editor.destroy(); // 组件销毁时，及时销毁编辑器\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;EACAA,YADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAG,cAFA;MAGAF;IAHA;EALA,CALA;;EAgBAG;IACA;MACA;MACAC,WAFA;MAGAC,YAHA;MAIAC,YAJA;MAKAC,iBALA;MAMAC;QAAAC;MAAA,CANA;MAOAC,eAPA,CAOA;;IAPA;EASA,CA1BA;;EA2BAC;IACAV;MACA;IACA;;EAHA,CA3BA;EAgCAW;IACAC;MACAC;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA,kCADA,CACA;IACA,CATA;;IAUAC;MACA;MACA;MACAX,iBAHA,CAGA;IACA;;EAdA;AAhCA","names":["name","components","VEmojiPicker","props","client","type","default","receiveMsg","require","data","recText","sendText","editor","toolbarConfig","editorConfig","placeholder","mode","watch","methods","selectEmoji","console","receiveMsgHandle","onCreated","beforeDestroy"],"sourceRoot":"src/views/meeting/components","sources":["Chat.vue"],"sourcesContent":["<template>\n  <div class=\"Chat-container\">\n    <el-input v-model=\"recText\" :rows=\"23.5\" type=\"textarea\" readonly placeholder=\"还没有人聊天...\" />\n    <el-popover\n        ref=\"popverRef\"\n        trigger=\"click\"\n        popper-class=\"popverClass\">\n      <!-- 触发事件 -->\n      <el-button   slot=\"reference\" size=\"mini\" icon=\"el-icon-message-solid\"/>\n      <!-- 弹框内容 -->\n      <div class=\"div_content\">\n        <VEmojiPicker @select=\"selectEmoji\" />\n      </div>\n    </el-popover>\n    <el-input v-model=\"sendText\" placeholder=\"请输入内容\" maxlength=\"64\"  class=\"input-with-select\">\n\n\n      <el-button slot=\"prepend\" size=\"mini\" icon=\"el-icon-message-solid\" @click=\"$emit('noticeEvent',sendText)\" />\n      <el-button slot=\"append\" size=\"mini\" icon=\"el-icon-s-promotion\" @click=\"$emit('chatEvent',sendText);sendText=''\" />\n    </el-input>\n\n\n  </div>\n</template>\n\n<script>\nimport { VEmojiPicker } from 'v-emoji-picker';\nexport default {\n  name: 'Chat',\n  components: {\n    VEmojiPicker\n  },\n  props: {\n    client: {\n      type: Object,\n      default: null\n    },\n    receiveMsg: {\n      type: String,\n      require: false,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      // pack: packData,\n      recText: '',\n      sendText: '',\n      editor: null,\n      toolbarConfig: { },\n      editorConfig: { placeholder: '请输入内容...' },\n      mode: 'default', // or 'simple'\n    }\n  },\n  watch: {\n    receiveMsg() {\n      this.receiveMsgHandle()\n    }\n  },\n  methods: {\n    selectEmoji(emoji) {\n      console.log(emoji)\n    },\n    receiveMsgHandle() {\n      this.recText += this.receiveMsg\n    },\n    onCreated(editor) {\n      this.editor = Object.seal(editor) // 一定要用 Object.seal() ，否则会报错\n    },\n    beforeDestroy() {\n      const editor = this.editor\n      if (editor == null) return\n      editor.destroy() // 组件销毁时，及时销毁编辑器\n    }\n  }\n}\n</script>\n\n\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}