{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport arrowL from '@/assets/images/emergency/arrowL.png';\nimport arrowR from '@/assets/images/emergency/arrowR.png';\nimport icon from '@/assets/images/emergency/icon.png';\nimport iconArrow from '@/assets/images/emergency/iconArrow.png';\nexport default {\n  components: {},\n\n  data() {\n    return {\n      progressList: [{\n        type: '1'\n      }, {\n        type: '2'\n      }, {\n        type: '1'\n      }, {\n        type: '2'\n      }, {\n        type: '1'\n      }, {\n        type: '2'\n      }, {\n        type: '1'\n      }, {\n        type: '2'\n      }, {\n        type: '1'\n      }, {\n        type: '2'\n      }],\n      arrowL,\n      arrowR,\n      icon,\n      iconArrow,\n      currentProgressId: '',\n      scrollResultWidth: 0,\n      //transform滚动的距离\n      signleWidth: 215,\n      //单个流程的宽度\n      activeName: 0,\n      currentClickNumber: 0,\n      noScrollRight: true\n    };\n  },\n\n  created() {\n    this.$nextTick(() => {\n      setTimeout(() => {\n        this.initgoRightArrow();\n      });\n    });\n  },\n\n  methods: {\n    //初始化判断是否可以向右滚动\n    initgoRightArrow() {\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n      //如果最后一个流程图标已经展示出来，则停止滚动\n\n      if (this.currentClickNumber + canNumber >= this.progressList.length) {\n        this.noScrollRight = false;\n        return;\n      }\n    },\n\n    //点击上一个\n    fnPrev() {\n      //如果右点击的次数大于0，才可以左滚\n      if (this.currentClickNumber > 0) {\n        this.currentClickNumber -= 1;\n        this.noScrollRight = true;\n        this.fnScrollWidth('reduce');\n      } else {\n        return false;\n      }\n    },\n\n    //点击下一个\n    fnNext() {\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n      //如果最后一个流程图标已经展示出来，则停止滚动\n\n      if (this.currentClickNumber + canNumber >= this.progressList.length) {\n        return;\n      } //说明放不下有滚动条\n\n\n      if (this.progressList.length > canNumber) {\n        this.currentClickNumber += 1;\n\n        if (this.currentClickNumber + canNumber >= this.progressList.length) {\n          this.noScrollRight = false;\n        }\n\n        this.fnScrollWidth('add');\n      }\n    },\n\n    //translate的宽度\n    fnScrollWidth(type) {\n      let result = 0;\n\n      if (type === 'reduce') {\n        result = 215;\n      } else if (type === 'add') {\n        result = -215;\n      } else {\n        result = 0;\n      }\n\n      this.scrollResultWidth += result;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;EACAA,cADA;;EAEAC;IACA;MACAC,eACA;QAAAC;MAAA,CADA,EAEA;QAAAA;MAAA,CAFA,EAGA;QAAAA;MAAA,CAHA,EAIA;QAAAA;MAAA,CAJA,EAKA;QAAAA;MAAA,CALA,EAMA;QAAAA;MAAA,CANA,EAOA;QAAAA;MAAA,CAPA,EAQA;QAAAA;MAAA,CARA,EASA;QAAAA;MAAA,CATA,EAUA;QAAAA;MAAA,CAVA,CADA;MAaAC,MAbA;MAcAC,MAdA;MAeAC,IAfA;MAgBAC,SAhBA;MAiBAC,qBAjBA;MAkBAC,oBAlBA;MAkBA;MACAC,gBAnBA;MAmBA;MACAC,aApBA;MAqBAC,qBArBA;MAsBAC;IAtBA;EAwBA,CA3BA;;EA4BAC;IACA;MACAC;QACA;MACA,CAFA;IAGA,CAJA;EAKA,CAlCA;;EAmCAC;IACA;IACAC;MACA;MACA,oEAFA,CAEA;MACA;;MACA;QACA;QACA;MACA;IACA,CAVA;;IAWA;IACAC;MACA;MACA;QACA;QACA;QACA;MACA,CAJA,MAIA;QACA;MACA;IACA,CArBA;;IAsBA;IACAC;MACA;MACA,oEAFA,CAEA;MACA;;MACA;QACA;MACA,CANA,CAOA;;;MACA;QACA;;QACA;UACA;QACA;;QACA;MACA;IACA,CAtCA;;IAuCA;IACAC;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;;MACA;IACA;;EAlDA;AAnCA","names":["components","data","progressList","type","arrowL","arrowR","icon","iconArrow","currentProgressId","scrollResultWidth","signleWidth","activeName","currentClickNumber","noScrollRight","created","setTimeout","methods","initgoRightArrow","fnPrev","fnNext","fnScrollWidth","result"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <div class=\"ProgressBoxTool\" v-if=\"progressList && progressList.length\">\r\n      <div class=\"processBox\">\r\n        <div :class=\"currentClickNumber > 0 ? 'arrow' : 'arrow arrowOpacity'\" @click=\"fnPrev()\">\r\n          <img :src=\"arrowL\" alt=\"\" />\r\n        </div>\r\n        <div class=\"fixedBox\" :ref=\"`fixedBox`\">\r\n          <div\r\n              class=\"centerScroll\"\r\n              :style=\"\r\n              `width:${signleWidth *\r\n                progressList.length}px;transform:translate(${scrollResultWidth}px,0);transition:1s;`\r\n            \"\r\n          >\r\n            <div\r\n                class=\"signleTab\"\r\n                v-for=\"(itemP, indexP) in progressList\"\r\n                :key=\"indexP + 'progress'\"\r\n            >\r\n              <div class=\"leftIcon\">\r\n                <img class=\"pregressIcon\" :src=\"icon\" alt=\"\" />\r\n              </div>\r\n              <!-- 最后一个不展示箭头 -->\r\n              <img\r\n                  v-if=\"progressList.length > indexP + 1\"\r\n                  :src=\"iconArrow\"\r\n                  alt=\"\"\r\n                  class=\"arrowSquare\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div :class=\"noScrollRight ? 'arrow' : 'arrow arrowOpacity'\" @click=\"fnNext(activeName)\">\r\n          <img :src=\"arrowR\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport arrowL from '@/assets/images/emergency/arrowL.png';\r\nimport arrowR from '@/assets/images/emergency/arrowR.png';\r\nimport icon from '@/assets/images/emergency/icon.png';\r\nimport iconArrow from '@/assets/images/emergency/iconArrow.png';\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      progressList: [\r\n        { type: '1' },\r\n        { type: '2' },\r\n        { type: '1' },\r\n        { type: '2' },\r\n        { type: '1' },\r\n        { type: '2' },\r\n        { type: '1' },\r\n        { type: '2' },\r\n        { type: '1' },\r\n        { type: '2' }\r\n      ],\r\n      arrowL,\r\n      arrowR,\r\n      icon,\r\n      iconArrow,\r\n      currentProgressId: '',\r\n      scrollResultWidth: 0, //transform滚动的距离\r\n      signleWidth: 215, //单个流程的宽度\r\n      activeName: 0,\r\n      currentClickNumber: 0,\r\n      noScrollRight: true\r\n    };\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      setTimeout(() => {\r\n        this.initgoRightArrow();\r\n      });\r\n    });\r\n  },\r\n  methods: {\r\n    //初始化判断是否可以向右滚动\r\n    initgoRightArrow() {\r\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\r\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\r\n      //如果最后一个流程图标已经展示出来，则停止滚动\r\n      if (this.currentClickNumber + canNumber >= this.progressList.length) {\r\n        this.noScrollRight = false;\r\n        return;\r\n      }\r\n    },\r\n    //点击上一个\r\n    fnPrev() {\r\n      //如果右点击的次数大于0，才可以左滚\r\n      if (this.currentClickNumber > 0) {\r\n        this.currentClickNumber -= 1;\r\n        this.noScrollRight = true;\r\n        this.fnScrollWidth('reduce');\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //点击下一个\r\n    fnNext() {\r\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\r\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\r\n      //如果最后一个流程图标已经展示出来，则停止滚动\r\n      if (this.currentClickNumber + canNumber >= this.progressList.length) {\r\n        return;\r\n      }\r\n      //说明放不下有滚动条\r\n      if (this.progressList.length > canNumber) {\r\n        this.currentClickNumber += 1;\r\n        if (this.currentClickNumber + canNumber >= this.progressList.length) {\r\n          this.noScrollRight = false;\r\n        }\r\n        this.fnScrollWidth('add');\r\n      }\r\n    },\r\n    //translate的宽度\r\n    fnScrollWidth(type) {\r\n      let result = 0;\r\n      if (type === 'reduce') {\r\n        result = 215;\r\n      } else if (type === 'add') {\r\n        result = -215;\r\n      } else {\r\n        result = 0;\r\n      }\r\n      this.scrollResultWidth += result;\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n//中间的时间发展部分\r\n.processBox {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  .arrow {\r\n    width: 60px;\r\n    cursor: pointer;\r\n  }\r\n  .arrowOpacity {\r\n    cursor: default;\r\n    opacity: 0.4;\r\n  }\r\n  .fixedBox {\r\n    flex: 1;\r\n    overflow: hidden;\r\n  }\r\n  .centerScroll {\r\n    // flex: 1;\r\n    box-sizing: border-box;\r\n    padding: 20px 0;\r\n    white-space: nowrap;\r\n    // width: calc(100% - 120px);\r\n    // overflow-x: auto;\r\n    .signleTab {\r\n      width: 215px;\r\n      position: relative;\r\n      display: inline-block;\r\n      .leftIcon {\r\n        width: 150px;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        & > .pregressIcon {\r\n          width: 60px;\r\n          height: 60px;\r\n        }\r\n      }\r\n      & > .arrowSquare {\r\n        position: absolute;\r\n        top: 25px;\r\n        right: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}