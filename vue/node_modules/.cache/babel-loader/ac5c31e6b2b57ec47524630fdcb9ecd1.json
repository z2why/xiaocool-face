{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'join',\n  data: function data() {\n    return {};\n  },\n  watch: {\n    timerCount: {\n      handler: function handler(value) {\n        var _this = this;\n\n        if (value > 0 && this.timerEnabled) {\n          setTimeout(function () {\n            _this.timerCount = _this.timerCount - 1;\n          }, 1000);\n        } else {}\n      }\n    }\n  },\n  methods: {\n    // 打开摄像头\n    openPhoto: function openPhoto() {\n      var _this2 = this;\n\n      // H5调用电脑摄像头API\n      //navigator.mediaDevices.getUserMedia 调用后 会提示用户给予使用媒体输入的许可.返回一个 Promise 对象，\n      //成功后会resolve回调一个 MediaStream 对象。\n      //在H5设备上面调用摄像头也可以通过此种方式，如下的例子表示优先使用前置摄像头\n      //{ audio: true, video: { facingMode: \"user\" } }前摄像头\n      //{ audio: true, video: { facingMode: { exact: \"environment\" } } }强制使用后置摄像头\n      //设置获取接近 1280x720 的相机分辨率\n      //{ audio: true, video: { width: 1280, height: 720 } };\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: 1280,\n          height: 720\n        }\n      }).then(function (success) {\n        // 摄像头开启成功\n        _this2.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n        // 实时拍照效果\n\n        _this2.$refs[\"video\"].play();\n      }).catch(function (error) {\n        //摄像头开启失败\n        console.error(\"摄像头开启失败\");\n      });\n    },\n    // 拍照\n    photograph: function photograph() {\n      var photoInfo = this.$refs[\"canvas\"].getContext(\"2d\"); // 把当前内容渲染到canvas上\n\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480); //canvas图片 转base64格式、图片格式转换、图片质量压缩\n\n      var imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\", 0.7);\n      var string = imgBase64.replace(\"data:image/jpeg;base64,\", \"\");\n      var strLgh = string.length;\n      var fileLgh = parseInt(strLgh - strLgh / 8 * 2); //\n\n      var size = (fileLgh / 1024).toFixed(2); // 由字节转换为KB 判断大小\n\n      console.log(size); //图片大小\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA;EACAA,YADA;EAGAC,IAHA,kBAGA;IACA;EAGA,CAPA;EAQAC;IACAC;MACAC,OADA,mBACAC,KADA,EACA;QAAA;;QACA;UACAC;YACA;UACA,CAFA,EAEA,IAFA;QAGA,CAJA,MAIA,CAIA;MACA;IAXA;EADA,CARA;EAyBAC;IACA;IACAC,SAFA,uBAEA;MAAA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,uBACAC,YADA,CACA;QACAC,WADA;QACAC;UAAAC;UAAAC;QAAA;MADA,CADA,EAIAC,IAJA,CAIA;QACA;QACA,0CAFA,CAEA;QACA;;QACA;MACA,CATA,EAUAC,KAVA,CAUA;QACA;QACAC;MACA,CAbA;IAcA,CAzBA;IA0BA;IACAC,UA3BA,wBA2BA;MACA,sDADA,CAEA;;MACAC,yDAHA,CAIA;;MACA;MACA;MACA;MACA,gDARA,CAQA;;MACA,uCATA,CASA;;MACAF,kBAVA,CAUA;IACA;EAtCA;AAzBA","names":["name","data","watch","timerCount","handler","value","setTimeout","methods","openPhoto","navigator","getUserMedia","audio","video","width","height","then","catch","console","photograph","photoInfo"],"sourceRoot":"src/views","sources":["join.vue"],"sourcesContent":["<template>\n\n\n<div>\n  <!--开启摄像头-->\n  <div>{{ timerCount }}</div>\n  <el-button size=\"mini\"   @click=\"openPhoto\" >摄像头</el-button>\n  <!--canvas截取流-->\n  <canvas ref=\"canvas\" width=\"500\" height=\"500\"></canvas>\n  <!--图片展示-->\n  <video ref=\"video\" width=\"500\" height=\"500\" autoplay></video>\n  <!--确认-->\n  <el-button size=\"mini\"  @click=\"photograph\">拍照</el-button>\n\n    </div>\n</template>\n<style scoped lang=\"less\">\n\n</style>\n<script>\nexport default {\n  name: 'join',\n\n  data() {\n    return {\n\n    };\n  },\n  watch: {\n    timerCount: {\n      handler(value) {\n        if (value > 0 && this.timerEnabled) {\n          setTimeout(() => {\n            this.timerCount = this.timerCount - 1;\n          }, 1000);\n        } else {\n\n\n\n        }\n      },\n\n    },\n  },\n\n  methods: {\n    // 打开摄像头\n    openPhoto() {\n      // H5调用电脑摄像头API\n      //navigator.mediaDevices.getUserMedia 调用后 会提示用户给予使用媒体输入的许可.返回一个 Promise 对象，\n      //成功后会resolve回调一个 MediaStream 对象。\n      //在H5设备上面调用摄像头也可以通过此种方式，如下的例子表示优先使用前置摄像头\n      //{ audio: true, video: { facingMode: \"user\" } }前摄像头\n      //{ audio: true, video: { facingMode: { exact: \"environment\" } } }强制使用后置摄像头\n      //设置获取接近 1280x720 的相机分辨率\n      //{ audio: true, video: { width: 1280, height: 720 } };\n      navigator.mediaDevices\n          .getUserMedia({\n            audio: true, video: { width: 1280, height: 720 }\n          })\n          .then((success) => {\n            // 摄像头开启成功\n            this.$refs[\"video\"].srcObject = success; //srcObject 是实时流\n            // 实时拍照效果\n            this.$refs[\"video\"].play();\n          })\n          .catch((error) => {\n            //摄像头开启失败\n            console.error(\"摄像头开启失败\");\n          });\n    },\n    // 拍照\n    photograph() {\n      let photoInfo= this.$refs[\"canvas\"].getContext(\"2d\");\n      // 把当前内容渲染到canvas上\n      photoInfo.drawImage(this.$refs[\"video\"], 0, 0, 640, 480);\n      //canvas图片 转base64格式、图片格式转换、图片质量压缩\n      let imgBase64 = this.$refs[\"canvas\"].toDataURL(\"image/jpeg\", 0.7);\n      let string = imgBase64.replace(\"data:image/jpeg;base64,\", \"\");\n      let strLgh = string.length;\n      let fileLgh = parseInt(strLgh - (strLgh  / 8) * 2); //\n      let size = (fileLgh / 1024).toFixed(2);// 由字节转换为KB 判断大小\n      console.log(size); //图片大小\n    },\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}